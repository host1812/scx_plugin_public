? src/Pegasus/Common/ProductDirectoryStructure.h
? src/Pegasus/Common/ProductVersion.h
? src/Pegasus/Config/FixedPropertyTableSolaris.h
? src/Pegasus/Config/ProductDirectoryStructure.h
Index: Makefile.Release
===================================================================
RCS file: /cvs/MSB/pegasus/Makefile.Release,v
retrieving revision 1.77
diff -u -w -r1.77 Makefile.Release
--- Makefile.Release	1 Oct 2007 20:15:23 -0000	1.77
+++ Makefile.Release	15 Dec 2008 00:02:23 -0000
@@ -58,6 +58,16 @@
 	@$(MAKE) -f $(ROOT)/Makefile.Release stage
 	@$(ECHO) "build completed successfully"
 
+
+#---------------------
+# buildmu target: build mu the make utility that among other things
+#                 includes depend
+# SCX: This target was copied from the regular Makefile.
+buildmu: FORCE
+	$(MKDIRHIER) $(BIN_DIR)
+	$(MAKE) --directory=$(PEGASUS_ROOT)/src/utils/mu -f Makefile
+	$(COPY) $(PEGASUS_ROOT)/src/utils/mu/mu $(BIN_DIR)
+
 repository: FORCE
 	$(MAKE) "-SC" Schemas/Pegasus repository
 
@@ -525,7 +535,10 @@
              "\""$(PEGASUS_SBIN_DIR)/cimservera"\"" \
              >> $(ROOT)/src/Pegasus/Common/ProductDirectoryStructure.h
 	@$(ECHO-E) "# define PEGASUS_PROVIDER_AGENT_PROC_NAME"  \
-             "\""$(PEGASUS_SBIN_DIR)/cimprovagt"\"" \
+             "\""$(PEGASUS_PROVIDER_AGENT_PROC_NAME)"\"" \
+             >> $(ROOT)/src/Pegasus/Common/ProductDirectoryStructure.h
+	@$(ECHO-E) "# define PEGASUS_SERVER_PROCESS_NAME"  \
+             "\""$(PEGASUS_SERVER_PROCESS_NAME)"\"" \
              >> $(ROOT)/src/Pegasus/Common/ProductDirectoryStructure.h
 	@$(ECHO-E) "" \
              >> $(ROOT)/src/Pegasus/Common/ProductDirectoryStructure.h
Index: env_var.status
===================================================================
RCS file: /cvs/MSB/pegasus/env_var.status,v
retrieving revision 1.1
diff -u -w -r1.1 env_var.status
--- env_var.status	28 Jul 2004 16:32:36 -0000	1.1
+++ env_var.status	15 Dec 2008 00:02:24 -0000
@@ -1,7 +1,4 @@
-# All defines are commented out. Run SetConfig_EnvVar to select
-# the proper options.
 
-# The syntax of this file is 
-# <define>=<value>
-# such as:
-#PEGASUS_HAS_SSL=Yes
+
+
+
Index: Schemas/Pegasus/Makefile
===================================================================
RCS file: /cvs/MSB/pegasus/Schemas/Pegasus/Makefile,v
retrieving revision 1.10
diff -u -w -r1.10 Makefile
--- Schemas/Pegasus/Makefile	4 Oct 2006 19:49:12 -0000	1.10
+++ Schemas/Pegasus/Makefile	15 Dec 2008 00:02:52 -0000
@@ -44,7 +44,9 @@
 repository:
 	$(MAKE) --directory=Internal repository
 	$(MAKE) --directory=InterOp repository
-	$(MAKE) --directory=ManagedSystem repository
+# Commented out, PG Schema is not supported and should not be created
+#	$(MAKE) --directory=ManagedSystem repository
+
 
 # Delete and rebuild the core namespaces using the client MOF compiler
 repositoryServer:
Index: mak/commands.mak
===================================================================
RCS file: /cvs/MSB/pegasus/mak/commands.mak,v
retrieving revision 1.60
diff -u -w -r1.60 commands.mak
--- mak/commands.mak	11 Sep 2007 18:13:06 -0000	1.60
+++ mak/commands.mak	15 Dec 2008 00:03:09 -0000
@@ -335,7 +335,7 @@
     MKDIRHIER = mkdir -p
     RMDIRHIER = rm -rf
     ECHO = echo
-    ECHO-E = 
+    ECHO-E = echo
     COPY = cp
     CHMOD = chmod
     CHOWN = chown
Index: mak/config-linux.mak
===================================================================
RCS file: /cvs/MSB/pegasus/mak/config-linux.mak,v
retrieving revision 1.54
diff -u -w -r1.54 config-linux.mak
--- mak/config-linux.mak	6 Jul 2007 18:17:07 -0000	1.54
+++ mak/config-linux.mak	15 Dec 2008 00:03:09 -0000
@@ -91,7 +91,8 @@
 
 LIB_SUFFIX = .so.$(MAJOR_VERSION_NUMBER)
 
-DEFINES += -DPEGASUS_USE_SYSLOGS
+# We want all logs in files
+# DEFINES += -DPEGASUS_USE_SYSLOGS
 
 SYS_LIBS = -ldl -lpthread -lcrypt
 
@@ -104,6 +105,13 @@
     ## and compile-out the code that uses the password file.
 
     DEFINES += -DPEGASUS_PAM_AUTHENTICATION -DPEGASUS_NO_PASSWORDFILE
+
+    ##
+    ## SCX - We want to identify as other than wbem.
+    ##
+    ifdef PEGASUS_PAM_SERVICE_NAME
+	DEFINES += -DPEGASUS_PAM_SERVICE_NAME=\"$(PEGASUS_PAM_SERVICE_NAME)\"
+    endif
 endif
 
 FLAGS += -W -Wall -Wno-unused  -D_GNU_SOURCE -DTHREAD_SAFE -D_REENTRANT
Index: mak/config.mak
===================================================================
RCS file: /cvs/MSB/pegasus/mak/config.mak,v
retrieving revision 1.153
diff -u -w -r1.153 config.mak
--- mak/config.mak	12 Sep 2007 21:30:58 -0000	1.153
+++ mak/config.mak	15 Dec 2008 00:03:09 -0000
@@ -533,6 +533,9 @@
 
 ifdef PEGASUS_HAS_SSL
     DEFINES += -DPEGASUS_HAS_SSL 
+    ifeq ($(PEGASUS_PLATFORM), SOLARIS_SPARC_CC)
+    	 DEFINES += `pkg-config --cflags openssl`
+    endif
 
     # Enable SSL Random file by default.
     ifndef PEGASUS_USE_SSL_RANDOMFILE
Index: mak/platform_AIX_RS_IBMCXX.mak
===================================================================
RCS file: /cvs/MSB/pegasus/mak/platform_AIX_RS_IBMCXX.mak,v
retrieving revision 1.30
diff -u -w -r1.30 platform_AIX_RS_IBMCXX.mak
--- mak/platform_AIX_RS_IBMCXX.mak	6 Jul 2007 18:17:07 -0000	1.30
+++ mak/platform_AIX_RS_IBMCXX.mak	15 Dec 2008 00:03:09 -0000
@@ -52,7 +52,8 @@
 FLAGS = -O2 -s
 endif
 
-FLAGS += -qrtti=dyna -qcpluscmt -qlanglvl=newexcp
+#64bit: FLAGS += -q64 -qrtti=dyna -qcpluscmt -qlanglvl=newexcp
+FLAGS += -q32 -qrtti=dyna -qcpluscmt -qlanglvl=newexcp
 
 SYS_LIBS = -ldl 
 
@@ -101,6 +102,12 @@
 ##
 ifdef PEGASUS_PAM_AUTHENTICATION
  DEFINES += -DPEGASUS_PAM_AUTHENTICATION -DPEGASUS_NO_PASSWORDFILE
+ ##
+ ## SCX - We want to identify as other than wbem.
+ ##
+ ifdef PEGASUS_PAM_SERVICE_NAME
+   DEFINES += -DPEGASUS_PAM_SERVICE_NAME=\"$(PEGASUS_PAM_SERVICE_NAME)\"
+ endif
 endif
 
 # l10n
@@ -156,9 +163,9 @@
   endif
 endif
 
-ifdef PEGASUS_USE_RELEASE_DIRS
-  PEGASUS_DEST_LIB_DIR =/usr/lib
-endif
+# ifdef PEGASUS_USE_RELEASE_DIRS
+#   PEGASUS_DEST_LIB_DIR =/usr/lib
+# endif
 
 ifdef PEGASUS_ENABLE_JMPI_PROVIDER_MANAGER
   JVM_LINK_FLAGS=-Wl,-bM:UR
Index: mak/platform_DARWIN_GNU.mak
===================================================================
RCS file: /cvs/MSB/pegasus/mak/platform_DARWIN_GNU.mak,v
retrieving revision 1.1
diff -u -w -r1.1 platform_DARWIN_GNU.mak
--- mak/platform_DARWIN_GNU.mak	1 Dec 2006 22:40:22 -0000	1.1
+++ mak/platform_DARWIN_GNU.mak	15 Dec 2008 00:03:09 -0000
@@ -60,6 +60,24 @@
   CC = cc
 endif
 
+# PAM support
+ifdef PEGASUS_PAM_AUTHENTICATION
+    SYS_LIBS += -lpam
+
+    ## The following flags need to be set or unset
+    ## to compile-in the code required for PAM authentication
+    ## and compile-out the code that uses the password file.
+
+    DEFINES += -DPEGASUS_PAM_AUTHENTICATION -DPEGASUS_NO_PASSWORDFILE
+
+    ##
+    ## SCX - We want to identify as other than wbem.
+    ##
+    ifdef PEGASUS_PAM_SERVICE_NAME
+	DEFINES += -DPEGASUS_PAM_SERVICE_NAME=\"$(PEGASUS_PAM_SERVICE_NAME)\"
+    endif
+endif
+
 SH = sh
 
 YACC = yacc
Index: mak/platform_HPUX_ACC.mak
===================================================================
RCS file: /cvs/MSB/pegasus/mak/platform_HPUX_ACC.mak,v
retrieving revision 1.45
diff -u -w -r1.45 platform_HPUX_ACC.mak
--- mak/platform_HPUX_ACC.mak	6 Jul 2007 18:17:07 -0000	1.45
+++ mak/platform_HPUX_ACC.mak	15 Dec 2008 00:03:09 -0000
@@ -73,7 +73,8 @@
 
 DEFINES = -DPEGASUS_PLATFORM_$(PEGASUS_PLATFORM) -DPEGASUS_PLATFORM_HPUX_ACC
 
-DEFINES += -DPEGASUS_USE_SYSLOGS
+# We want all logs in files
+# DEFINES += -DPEGASUS_USE_SYSLOGS
 
 ifdef PEGASUS_USE_EMANATE
  DEFINES += -DHPUX_EMANATE
@@ -95,6 +96,12 @@
 
 ifdef PEGASUS_PAM_AUTHENTICATION
  DEFINES += -DPEGASUS_PAM_AUTHENTICATION -DPEGASUS_NO_PASSWORDFILE
+ ##
+ ## SCX - We want to identify as other than wbem.
+ ##
+ ifdef PEGASUS_PAM_SERVICE_NAME
+   DEFINES += -DPEGASUS_PAM_SERVICE_NAME=\"$(PEGASUS_PAM_SERVICE_NAME)\"
+ endif
 endif
 
 # l10n
@@ -195,8 +202,10 @@
 endif
 
 ifdef PEGASUS_USE_RELEASE_DIRS
+  ifndef PEGASUS_OVERRIDE_DEFAULT_RELEASE_DIRS
     PEGASUS_DEST_LIB_DIR=/opt/wbem/lib
 endif
+endif
 
 #
 #  For future use on HP-UX
Index: mak/platform_HPUX_IA64_ACC.mak
===================================================================
RCS file: /cvs/MSB/pegasus/mak/platform_HPUX_IA64_ACC.mak,v
retrieving revision 1.10
diff -u -w -r1.10 platform_HPUX_IA64_ACC.mak
--- mak/platform_HPUX_IA64_ACC.mak	6 Jul 2007 17:50:13 -0000	1.10
+++ mak/platform_HPUX_IA64_ACC.mak	15 Dec 2008 00:03:09 -0000
@@ -43,7 +43,7 @@
   DEFINES += -DHPUX_IA64_NATIVE_COMPILER
 endif
 
-FLAGS += +Z +DD64 -AA -mt -Wl,+rpathfirst
+FLAGS += +Z +DD32 -AA -mt -Wl,+rpathfirst
 
 ifdef PEGASUS_PAM_AUTHENTICATION
     SYS_LIBS += -lpam
Index: mak/platform_HPUX_PARISC_ACC.mak
===================================================================
RCS file: /cvs/MSB/pegasus/mak/platform_HPUX_PARISC_ACC.mak,v
retrieving revision 1.31
diff -u -w -r1.31 platform_HPUX_PARISC_ACC.mak
--- mak/platform_HPUX_PARISC_ACC.mak	30 Jan 2006 16:16:23 -0000	1.31
+++ mak/platform_HPUX_PARISC_ACC.mak	15 Dec 2008 00:03:09 -0000
@@ -33,9 +33,17 @@
 
 ARCHITECTURE = PARISC
 
+ifeq ($(HPUX_IA64_NATIVE_COMPILER), yes)
+  SYS_INCLUDES += 
+else
 SYS_INCLUDES += -I$(ROOT)/src/stdcxx/stream
+endif
+
+ifeq ($(HPUX_IA64_NATIVE_COMPILER), yes)
+  DEFINES += -DHPUX_IA64_NATIVE_COMPILER
+endif
 
-FLAGS += +Z +DAportable -mt -D_PSTAT64
+FLAGS += +Z +DD32 -AA -mt -D_PSTAT64
 
 ifdef PEGASUS_PAM_AUTHENTICATION
    SYS_LIBS += -lpam
Index: mak/platform_PASE_ISERIES_IBMCXX.mak
===================================================================
RCS file: /cvs/MSB/pegasus/mak/platform_PASE_ISERIES_IBMCXX.mak,v
retrieving revision 1.1
diff -u -w -r1.1 platform_PASE_ISERIES_IBMCXX.mak
--- mak/platform_PASE_ISERIES_IBMCXX.mak	1 Aug 2007 02:16:33 -0000	1.1
+++ mak/platform_PASE_ISERIES_IBMCXX.mak	15 Dec 2008 00:03:09 -0000
@@ -105,6 +105,12 @@
 ##
 ifdef PEGASUS_PAM_AUTHENTICATION
  DEFINES += -DPEGASUS_PAM_AUTHENTICATION -DPEGASUS_NO_PASSWORDFILE
+ ##
+ ## SCX - We want to identify as other than wbem.
+ ##
+ ifdef PEGASUS_PAM_SERVICE_NAME
+   DEFINES += -DPEGASUS_PAM_SERVICE_NAME=\"$(PEGASUS_PAM_SERVICE_NAME)\"
+ endif
 endif
 
 # l10n
Index: mak/platform_SOLARIS_SPARC_CC.mak
===================================================================
RCS file: /cvs/MSB/pegasus/mak/platform_SOLARIS_SPARC_CC.mak,v
retrieving revision 1.23
diff -u -w -r1.23 platform_SOLARIS_SPARC_CC.mak
--- mak/platform_SOLARIS_SPARC_CC.mak	6 Jul 2007 18:17:07 -0000	1.23
+++ mak/platform_SOLARIS_SPARC_CC.mak	15 Dec 2008 00:03:09 -0000
@@ -42,7 +42,14 @@
 # This is a hack because the Pegasus build system doesn't have a way to specify
 # flags just for the C compiler or just for the C++ compiler.
 #
-CXX = CC -pto
+CXX = CC
+
+# SSL support
+ifdef PEGASUS_HAS_SSL
+ifndef OPENSSL_HOME
+OPENSSL_HOME = /usr/sfw
+endif
+endif
 
 SH = sh
 
@@ -68,6 +75,28 @@
 
 DEFINES += -DPEGASUS_OS_SOLARIS
 
+#
+# SCX: We need PAM support on solaris also!
+#
+# PAM support
+ifdef PEGASUS_PAM_AUTHENTICATION
+  EXTRA_LIBRARIES += -lpam
+endif
+##
+## The following flags need to be set or unset
+## to compile-in the code required for PAM authentication
+## and compile-out the code that uses the password file.
+##
+ifdef PEGASUS_PAM_AUTHENTICATION
+ DEFINES += -DPEGASUS_PAM_AUTHENTICATION -DPEGASUS_NO_PASSWORDFILE
+ ##
+ ## SCX - We want to identify as other than wbem.
+ ##
+ ifdef PEGASUS_PAM_SERVICE_NAME
+   DEFINES += -DPEGASUS_PAM_SERVICE_NAME=\"$(PEGASUS_PAM_SERVICE_NAME)\"
+ endif
+endif
+
 # PEGASUS_SNIA_INTEROP_TEST is currently (1/27/06) tested  and set in these 
 # platform files:
 #
@@ -117,7 +146,7 @@
 ifdef PEGASUS_USE_DEBUG_BUILD_OPTIONS 
 FLAGS = -g -KPIC -mt -xs -xildoff
 else
-FLAGS = -O4 -KPIC -mt -xildoff -s -xipo=1
+FLAGS = -xO3 -xspace -KPIC -mt -xildoff -s
 endif
 
 # Need warnings:
Index: mak/platform_SOLARIS_SPARC_GNU.mak
===================================================================
RCS file: /cvs/MSB/pegasus/mak/platform_SOLARIS_SPARC_GNU.mak,v
retrieving revision 1.10
diff -u -w -r1.10 platform_SOLARIS_SPARC_GNU.mak
--- mak/platform_SOLARIS_SPARC_GNU.mak	30 Jan 2006 16:16:23 -0000	1.10
+++ mak/platform_SOLARIS_SPARC_GNU.mak	15 Dec 2008 00:03:09 -0000
@@ -38,7 +38,7 @@
 
 SYS_INCLUDES = 
 
-DEFINES = -DPEGASUS_PLATFORM_$(PEGASUS_PLATFORM) -D_POSIX_PTHREAD_SEMANTICS -D BSD_COMP -D_REENTRANT
+DEFINES = -DPEGASUS_PLATFORM_$(PEGASUS_PLATFORM) -D_POSIX_PTHREAD_SEMANTICS -D BSD_COMP -D_REENTRANT -DPEGASUS_HAVE_TEMPLATE_SPECIALIZATION
 
 DEFINES += -DPEGASUS_OS_SOLARIS
 
Index: mak/program-unix.mak
===================================================================
RCS file: /cvs/MSB/pegasus/mak/program-unix.mak,v
retrieving revision 1.39
diff -u -w -r1.39 program-unix.mak
--- mak/program-unix.mak	1 Aug 2007 08:16:28 -0000	1.39
+++ mak/program-unix.mak	15 Dec 2008 00:03:09 -0000
@@ -128,11 +128,11 @@
            ifdef PEGASUS_HAS_MESSAGES
              ifdef ICU_ROOT
                ifdef ICU_INSTALL
-	         $(LINK_WRAPPER) $(CXX) -Wl,-brtl -blibpath:/usr/linux/lib:/usr/lib:/lib:$(ICU_INSTALL)/lib -Wl,-bhalt:$(AIX_LD_HALT) $(FLAGS) $(EXTRA_LINK_FLAGS) -L$(LIB_DIR) $(EXE_OUTPUT) $(OBJECTS) $(DYNAMIC_LIBRARIES) $(SYS_LIBS) $(EXTRA_LIBRARIES)
+	         $(LINK_WRAPPER) $(CXX) -Wl,-brtl -blibpath:/opt/microsoft/scx/lib:/opt/microsoft/scx/lib/providers:/opt/microsoft/scx/lib/providers/ext:/usr/lib:/lib:$(ICU_INSTALL)/lib -Wl,-bhalt:$(AIX_LD_HALT) $(FLAGS) $(EXTRA_LINK_FLAGS) -L$(LIB_DIR) $(EXE_OUTPUT) $(OBJECTS) $(DYNAMIC_LIBRARIES) $(SYS_LIBS) $(EXTRA_LIBRARIES)
                endif
              endif
            else
-	     $(LINK_WRAPPER) $(CXX) -Wl,-brtl -blibpath:/usr/linux/lib:/usr/lib:/lib -Wl,-bhalt:$(AIX_LD_HALT) $(FLAGS) $(EXTRA_LINK_FLAGS) -L$(LIB_DIR) $(EXE_OUTPUT) $(OBJECTS) $(DYNAMIC_LIBRARIES) $(SYS_LIBS) $(EXTRA_LIBRARIES)
+	     $(LINK_WRAPPER) $(CXX) -Wl,-brtl -blibpath:/opt/microsoft/scx/lib:/opt/microsoft/scx/lib/providers:/opt/microsoft/scx/lib/providers/ext:/usr/lib:/lib -Wl,-bhalt:$(AIX_LD_HALT) $(FLAGS) $(EXTRA_LINK_FLAGS) -L$(LIB_DIR) $(EXE_OUTPUT) $(OBJECTS) $(DYNAMIC_LIBRARIES) $(SYS_LIBS) $(EXTRA_LIBRARIES)
            endif
          else
 	   $(LINK_WRAPPER) $(CXX) -Wl,-brtl -Wl,-bhalt:$(AIX_LD_HALT) $(FLAGS) $(EXTRA_LINK_FLAGS) -L$(LIB_DIR) $(EXE_OUTPUT) $(OBJECTS) $(DYNAMIC_LIBRARIES) $(SYS_LIBS) $(EXTRA_LIBRARIES)
Index: mak/shared-library-unix.mak
===================================================================
RCS file: /cvs/MSB/pegasus/mak/shared-library-unix.mak,v
retrieving revision 1.8
diff -u -w -r1.8 shared-library-unix.mak
--- mak/shared-library-unix.mak	1 Aug 2007 02:17:12 -0000	1.8
+++ mak/shared-library-unix.mak	15 Dec 2008 00:03:09 -0000
@@ -37,16 +37,17 @@
 ##==============================================================================
 
 ifeq ($(COMPILER),xlc)
-  LINK_COMMAND = xlC_r
+#64bit:  LINK_COMMAND = xlC_r -q64
+  LINK_COMMAND = xlC_r -q32
   ifdef PEGASUS_USE_RELEASE_DIRS
     ifdef PEGASUS_HAS_MESSAGES
       ifdef ICU_ROOT
         ifdef ICU_INSTALL
-          LINK_ARGUMENTS = -qmkshrobj=$(AIX_LIB_PRIORITY) -blibpath:/usr/linux/lib:/usr/lib:/lib:$(ICU_INSTALL)/lib -Wl,-bhalt:$(AIX_LD_HALT)
+          LINK_ARGUMENTS = -qmkshrobj=$(AIX_LIB_PRIORITY) -blibpath:/usr/lib:/lib:$(ICU_INSTALL)/lib -Wl,-bhalt:$(AIX_LD_HALT)
         endif
       endif
     else
-      LINK_ARGUMENTS = -qmkshrobj=$(AIX_LIB_PRIORITY) -blibpath:/usr/linux/lib:/usr/lib:/lib -Wl,-bhalt:$(AIX_LD_HALT)
+      LINK_ARGUMENTS = -qmkshrobj=$(AIX_LIB_PRIORITY) -bnolibpath -Wl,-bhalt:$(AIX_LD_HALT)
     endif
   else
     LINK_ARGUMENTS = -qmkshrobj=$(AIX_LIB_PRIORITY) -Wl,-bhalt:$(AIX_LD_HALT)
@@ -66,9 +67,9 @@
 ifeq ($(COMPILER),acc)
   LINK_COMMAND = $(CXX) -b -Wl,+hlib$(LIBRARY)$(LIB_SUFFIX)
   ifeq ($(PEGASUS_PLATFORM), HPUX_IA64_ACC)
-    LINK_COMMAND += +DD64 -mt -Wl,+rpathfirst
+    LINK_COMMAND += +DD32 -mt -Wl,+rpathfirst
   else
-    LINK_COMMAND += -Wl,-Bsymbolic
+    LINK_COMMAND += -AA +DD32 -mt -Wl,-Bsymbolic
   endif
   ifeq ($(PEGASUS_SUPPORTS_DYNLIB),yes)
     ifdef PEGASUS_USE_RELEASE_DIRS
Index: src/Clients/CLITestClients/CLI/CLI.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Clients/CLITestClients/CLI/Attic/CLI.cpp,v
retrieving revision 1.53
diff -u -w -r1.53 CLI.cpp
--- src/Clients/CLITestClients/CLI/CLI.cpp	10 Sep 2007 08:17:02 -0000	1.53
+++ src/Clients/CLITestClients/CLI/CLI.cpp	15 Dec 2008 00:03:10 -0000
@@ -353,7 +353,7 @@
     else
     {
         cout << " Command name must be first parameter or --c parameter."
-            << " \n  ex. cli enumerateclasses\n"
+            << " \n  ex. " << argv[0] << " enumerateclasses\n"
             << "Enter " << argv[0] << " -h for help."
             << endl;
         exit(1);
@@ -532,6 +532,9 @@
     Uint64 maxRtTime = 0;
     Uint64 minRtTime = 10000000;
 
+    // Save our process name
+    const char *progName = argv[0];
+
     // Process the input command within a try block.
     try
     {
@@ -607,7 +610,7 @@
                 case ID_GetProperty :
                     if (argc != 4)
                     {
-                        cout << "Usage: cli getproperty <instancename>"
+                        cout << "Usage: " << progName << " getproperty <instancename>"
                             "<propertyname>" << endl;
                         exit(1);
                     }
@@ -622,7 +625,7 @@
                 case ID_SetProperty :
                     if (argc != 5)
                         cout <<
-                           "Usage: cli setproperty instancename propertyname"
+                            "Usage: " << progName << " setproperty instancename propertyname"
                                 " value "
                            << endl;
                     setProperty(client, opts);
@@ -766,7 +769,7 @@
                 default:
                     cout << "Invalid Command. Command name must be first parm"
                             " or --c parameter."
-                        << " \n  ex. cli enumerateclasses\n"
+                        << " \n  ex. " << progName << " enumerateclasses\n"
                         << "Enter " << argv[0] << " -h for help."
                         << endl;
                     exit(1);
Index: src/Clients/benchmarkTest/benchmarkDefinition/benchmarkDefinition.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Clients/benchmarkTest/benchmarkDefinition/benchmarkDefinition.cpp,v
retrieving revision 1.8
diff -u -w -r1.8 benchmarkDefinition.cpp
--- src/Clients/benchmarkTest/benchmarkDefinition/benchmarkDefinition.cpp	30 Jan 2006 16:16:31 -0000	1.8
+++ src/Clients/benchmarkTest/benchmarkDefinition/benchmarkDefinition.cpp	15 Dec 2008 00:03:12 -0000
@@ -36,7 +36,7 @@
 //%/////////////////////////////////////////////////////////////////////////////
 
 #include "benchmarkDefinition.h"
-
+#include <Pegasus/Common/CIMStatusCode.h>
 PEGASUS_USING_STD;
 
 #define MAX_NUMBER_OF_PROPERTIES   99999 
Index: src/Clients/cimconfig/CIMConfigCommand.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Clients/cimconfig/CIMConfigCommand.cpp,v
retrieving revision 1.66
diff -u -w -r1.66 CIMConfigCommand.cpp
--- src/Clients/cimconfig/CIMConfigCommand.cpp	10 Sep 2007 08:17:04 -0000	1.66
+++ src/Clients/cimconfig/CIMConfigCommand.cpp	15 Dec 2008 00:03:12 -0000
@@ -70,7 +70,7 @@
 /**
     The command name.
 */
-static const char COMMAND_NAME []              = "cimconfig";
+static char COMMAND_NAME [PATH_MAX + 1];    /* Normally "cimconfig" */
 
 /**
     The usage string for this command.  This string is displayed
@@ -1867,6 +1867,9 @@
     AutoPtr<CIMConfigCommand> command;
     Uint32               returnCode;
 
+    // Get the command name set appropriately
+    strncpy(COMMAND_NAME, argv[0], sizeof(COMMAND_NAME)-1);
+
     //l10n set message loading to process locale
     MessageLoader::_useProcessLocale = true; 
     MessageLoader::setPegasusMsgHomeRelative(argv[0]);
Index: src/Clients/cimprovider/CIMProviderCommand.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Clients/cimprovider/CIMProviderCommand.cpp,v
retrieving revision 1.64
diff -u -w -r1.64 CIMProviderCommand.cpp
--- src/Clients/cimprovider/CIMProviderCommand.cpp	10 Sep 2007 08:17:05 -0000	1.64
+++ src/Clients/cimprovider/CIMProviderCommand.cpp	15 Dec 2008 00:03:13 -0000
@@ -70,7 +70,7 @@
 /**
     The command name.
 */
-static const char COMMAND_NAME[]              = "cimprovider";
+static std::string COMMAND_NAME         = "cimprovider";
 
 /**
    The name of the provider module name  property for PG_Provider class
@@ -544,7 +544,7 @@
 
     usage.reserveCapacity(200);
     usage.append(USAGE);
-    usage.append(COMMAND_NAME);
+    usage.append(COMMAND_NAME.c_str());
 
     usage.append(" -").append(OPTION_DISABLE);
     usage.append(" -").append(OPTION_MODULE).append(" module \n");
@@ -1748,6 +1748,40 @@
 //
 PEGASUS_USING_PEGASUS;
 
+#if defined(PEGASUS_OS_TYPE_WINDOWS)
+# define SEPCHAR '\\'
+# define SEPCHAR2 '/'
+#else
+# define SEPCHAR '/'
+# define SEPCHAR2 '/'
+#endif
+
+
+///////////////////////////////////////////////////////////////////////////////
+/**
+    Fix up, and store, the command name that we were invoked with.
+
+    @param   Name  Name of the command that we were invoked with
+*/
+///////////////////////////////////////////////////////////////////////////////
+
+void fixCommandName(const char *name)
+{
+    const char *pos, *pos2;
+
+    pos = strrchr(name, SEPCHAR);
+    pos2 = strrchr(name, SEPCHAR2);
+    pos = (pos2 > pos) ? pos2 : pos;
+    if (!pos)
+        pos = name;
+    else
+        pos++;
+
+    COMMAND_NAME = pos;
+
+    return;
+}
+
 ///////////////////////////////////////////////////////////////////////////////
 /**
     Parses the command line, and execute the command.
@@ -1770,6 +1804,7 @@
     setEBCDICEncoding(STDERR_FILENO);
 #endif
 
+    fixCommandName(argv[0]);
     command.reset(new CIMProviderCommand());
 
     try
@@ -1778,11 +1813,11 @@
     }
     catch (CommandFormatException& cfe)
     {
-        cerr << COMMAND_NAME << ": " << cfe.getMessage() <<  endl;
+        cerr << COMMAND_NAME.c_str() << ": " << cfe.getMessage() <<  endl;
 
         MessageLoaderParms parms(ERR_USAGE_KEY, ERR_USAGE);
         parms.msg_src_path = MSG_PATH;
-        cerr << COMMAND_NAME <<
+        cerr << COMMAND_NAME.c_str() <<
             ": " << MessageLoader::getMessage(parms) << endl;
 
         return 1;
Index: src/Clients/wbemexec/WbemExecCommand.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Clients/wbemexec/WbemExecCommand.cpp,v
retrieving revision 1.81
diff -u -w -r1.81 WbemExecCommand.cpp
--- src/Clients/wbemexec/WbemExecCommand.cpp	11 Sep 2007 18:33:57 -0000	1.81
+++ src/Clients/wbemexec/WbemExecCommand.cpp	15 Dec 2008 00:03:16 -0000
@@ -66,7 +66,7 @@
 /**
     The command name.
  */
-const char   WbemExecCommand::COMMAND_NAME []      = "wbemexec";
+std::string WbemExecCommand::COMMAND_NAME          = "wbemexec";
 
 /**
     Label for the usage string for this command.
@@ -236,7 +236,7 @@
     //  The debug option is not included in end-user documentation.
     //
     usage = String (_USAGE);
-    usage.append (COMMAND_NAME);
+    usage.append (COMMAND_NAME.c_str());
     usage.append (" [ -");
     usage.append (_OPTION_HOSTNAME);
     usage.append (" hostname ] [ -");
@@ -1110,31 +1110,71 @@
     }
     catch (const WbemExecException& e)
     {
-        errPrintWriter << WbemExecCommand::COMMAND_NAME << ": " <<
+        errPrintWriter << WbemExecCommand::COMMAND_NAME.c_str() << ": " <<
             e.getMessage () << endl;
         return (RC_ERROR);
     }
     catch (const Exception& e)
     {
-        errPrintWriter << WbemExecCommand::COMMAND_NAME << ": " <<
+        errPrintWriter << WbemExecCommand::COMMAND_NAME.c_str() << ": " <<
             e.getMessage() << endl;
         return (RC_ERROR);
     }
     catch (const exception& e)
     {
-        errPrintWriter << WbemExecCommand::COMMAND_NAME << ": " <<
+        errPrintWriter << WbemExecCommand::COMMAND_NAME.c_str() << ": " <<
             e.what() << endl;
         return (RC_ERROR);
     }
     catch (...)
     {
-        errPrintWriter << WbemExecCommand::COMMAND_NAME << ": " <<
+        errPrintWriter << WbemExecCommand::COMMAND_NAME.c_str() << ": " <<
             "Unknown error thrown" << endl;
         return (RC_ERROR);
     }
     return (RC_SUCCESS);
 }
 
+PEGASUS_NAMESPACE_END
+
+// exclude main from the Pegasus Namespace
+PEGASUS_USING_PEGASUS;
+PEGASUS_USING_STD;
+
+#if defined(PEGASUS_OS_TYPE_WINDOWS)
+# define SEPCHAR '\\'
+# define SEPCHAR2 '/'
+#else
+# define SEPCHAR '/'
+# define SEPCHAR2 '/'
+#endif
+
+
+///////////////////////////////////////////////////////////////////////////////
+/**
+    Fix up, and store, the command name that we were invoked with.
+
+    @param   Name  Name of the command that we were invoked with
+*/
+///////////////////////////////////////////////////////////////////////////////
+
+void fixCommandName(const char *name)
+{
+    const char *pos, *pos2;
+
+    pos = strrchr(name, SEPCHAR);
+    pos2 = strrchr(name, SEPCHAR2);
+    pos = (pos2 > pos) ? pos2 : pos;
+    if (!pos)
+        pos = name;
+    else
+        pos++;
+
+    WbemExecCommand::COMMAND_NAME = pos;
+
+    return;
+}
+
 /**
 
     Parses the command line, and executes the command.
@@ -1146,14 +1186,10 @@
              1                  if an error occurs in executing the command
 
  */
-PEGASUS_NAMESPACE_END
-
-// exclude main from the Pegasus Namespace
-PEGASUS_USING_PEGASUS;
-PEGASUS_USING_STD;
 
 int main (int argc, char* argv [])
 {
+    fixCommandName(argv[0]);
     WbemExecCommand    command = WbemExecCommand ();
     int                rc;
     MessageLoader::setPegasusMsgHomeRelative(argv[0]);
@@ -1170,12 +1206,12 @@
     }
     catch (const CommandFormatException& cfe)
     {
-        cerr << WbemExecCommand::COMMAND_NAME << ": " << cfe.getMessage() 
+        cerr << WbemExecCommand::COMMAND_NAME.c_str() << ": " << cfe.getMessage() 
             << endl;
 
         MessageLoaderParms parms(ERR_USAGE_KEY,ERR_USAGE);
         parms.msg_src_path = MSG_PATH;
-        cerr << WbemExecCommand::COMMAND_NAME <<
+        cerr << WbemExecCommand::COMMAND_NAME.c_str() <<
             ": " << MessageLoader::getMessage(parms) << endl;
 
         exit (Command::RC_ERROR);
Index: src/Clients/wbemexec/WbemExecCommand.h
===================================================================
RCS file: /cvs/MSB/pegasus/src/Clients/wbemexec/WbemExecCommand.h,v
retrieving revision 1.22
diff -u -w -r1.22 WbemExecCommand.h
--- src/Clients/wbemexec/WbemExecCommand.h	18 Jun 2007 14:36:30 -0000	1.22
+++ src/Clients/wbemexec/WbemExecCommand.h	15 Dec 2008 00:03:16 -0000
@@ -96,7 +96,7 @@
     /**
         The command name.
      */
-    static const char   COMMAND_NAME [];
+    static std::string   COMMAND_NAME;
     
 private:
 
Index: src/Executor/PAMAuth.h
===================================================================
RCS file: /cvs/MSB/pegasus/src/Executor/PAMAuth.h,v
retrieving revision 1.5
diff -u -w -r1.5 PAMAuth.h
--- src/Executor/PAMAuth.h	25 Jul 2007 19:43:47 -0000	1.5
+++ src/Executor/PAMAuth.h	15 Dec 2008 00:03:17 -0000
@@ -49,7 +49,11 @@
 #include <string.h>
 #include <Executor/Strlcpy.h>
 #include <Executor/Strlcat.h>
+#if defined(__APPLE__)
+#include <pam/pam_appl.h>
+#else
 #include <security/pam_appl.h>
+#endif
 #include <Executor/Defines.h>
 #include <Executor/Socket.h>
 
@@ -81,6 +85,10 @@
 **==============================================================================
 */
 
+#ifndef PEGASUS_PAM_SERVICE_NAME
+#define PEGASUS_PAM_SERVICE_NAME "wbem"
+#endif
+
 /*
 **==============================================================================
 **
@@ -304,7 +312,7 @@
 
 static int PAMAuthenticateCallback(
     int num_msg,
-#if defined(PEGASUS_OS_LINUX)
+#if defined(PEGASUS_OS_LINUX) || defined(__APPLE__)
     const struct pam_message** msg,
 #else
     struct pam_message** msg,
@@ -358,7 +366,7 @@
 
 static int PAMValidateUserCallback(
     int num_msg,
-#if defined(PEGASUS_OS_LINUX)
+#if defined(PEGASUS_OS_LINUX) || defined(__APPLE__)
     const struct pam_message** msg,
 #else
     struct pam_message** msg,
@@ -408,7 +416,7 @@
     pconv.appdata_ptr = &data;
 
 
-    if (pam_start("wbem", username, &pconv, &handle) != PAM_SUCCESS)
+    if (pam_start(PEGASUS_PAM_SERVICE_NAME, username, &pconv, &handle) != PAM_SUCCESS)
         return -1;
 
     if (pam_authenticate(handle, 0) != PAM_SUCCESS)
@@ -447,7 +455,7 @@
     pconv.conv = PAMValidateUserCallback;
     pconv.appdata_ptr = &data;
 
-    if (pam_start("wbem", username, &pconv, &phandle) != PAM_SUCCESS)
+    if (pam_start(PEGASUS_PAM_SERVICE_NAME, username, &pconv, &phandle) != PAM_SUCCESS)
         return -1;
 
     if (pam_acct_mgmt(phandle, 0) != PAM_SUCCESS)
Index: src/Pegasus/Client/CIMClient.h
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Client/CIMClient.h,v
retrieving revision 1.75
diff -u -w -r1.75 CIMClient.h
--- src/Pegasus/Client/CIMClient.h	14 Nov 2006 18:34:48 -0000	1.75
+++ src/Pegasus/Client/CIMClient.h	15 Dec 2008 00:03:20 -0000
@@ -114,7 +114,9 @@
                     ". Trying to connect to " << host << endl;
             }
         </PRE>
-        @param host A String host name to connect to.
+        @param host A String host name to connect to.  If host is an empty
+        string and portNumber is 0, the client will attempt to connect
+        to the server's unix domain socket (on supporting platforms).
         @param portNumber A Uint32 port number to connect to.
         @param userName A String specifying the user name for the connection.
         @param password A String containing the password of the specified user.
Index: src/Pegasus/Client/CIMClientRep.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Client/CIMClientRep.cpp,v
retrieving revision 1.66
diff -u -w -r1.66 CIMClientRep.cpp
--- src/Pegasus/Client/CIMClientRep.cpp	31 Jul 2007 19:13:15 -0000	1.66
+++ src/Pegasus/Client/CIMClientRep.cpp	15 Dec 2008 00:03:21 -0000
@@ -219,10 +219,11 @@
         throw AlreadyConnectedException();
 
     //
-    // If the host is empty, set hostName to "localhost"
+    // If the host is empty and port is valid, set hostName to "localhost"
+    // Otherwise, HTTPConnector will use the unix domain socket. 
     //
     String hostName = host;
-    if (host == String::EMPTY)
+    if (!host.size() && (portNumber != 0))
     {
         hostName = "localhost";
     }
Index: src/Pegasus/Common/AuditLogger.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Common/AuditLogger.cpp,v
retrieving revision 1.16
diff -u -w -r1.16 AuditLogger.cpp
--- src/Pegasus/Common/AuditLogger.cpp	12 Sep 2007 21:30:58 -0000	1.16
+++ src/Pegasus/Common/AuditLogger.cpp	15 Dec 2008 00:03:22 -0000
@@ -136,6 +136,7 @@
 
 void AuditLogger::logCurrentEnvironmentVar()
 {
+#if !defined(PEGASUS_PLATFORM_SOLARIS_SPARC_GNU) && !defined(PEGASUS_PLATFORM_SOLARIS_SPARC_CC)
 #ifdef PEGASUS_OS_DARWIN
     char** envp = *_NSGetEnviron();
 #else
@@ -155,6 +156,7 @@
 
         i++;
     }
+#endif
 }
 
 void AuditLogger::logSetConfigProperty(
Index: src/Pegasus/Common/CIMDateTime.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Common/CIMDateTime.cpp,v
retrieving revision 1.77
diff -u -w -r1.77 CIMDateTime.cpp
--- src/Pegasus/Common/CIMDateTime.cpp	17 Nov 2006 18:53:26 -0000	1.77
+++ src/Pegasus/Common/CIMDateTime.cpp	15 Dec 2008 00:03:22 -0000
@@ -1542,10 +1542,7 @@
 
     int tzMinutesEast;
     {
-# if defined(PEGASUS_OS_SOLARIS)
-        tzMinutesEast =
-            -(int)((tmval->tm_isdst > 0 && daylight) ? altzone : timezone) / 60;
-# elif defined(PEGASUS_OS_HPUX)
+# if defined(PEGASUS_OS_HPUX) || defined(PEGASUS_PLATFORM_SOLARIS_SPARC_GNU)
         tzMinutesEast = - (int) timezone / 60;
         if ((tmval->tm_isdst > 0) && daylight)
         {
@@ -1553,6 +1550,9 @@
             // Assume 1 hour.
             tzMinutesEast += 60;
         }
+# elif defined(PEGASUS_OS_SOLARIS)
+        tzMinutesEast =
+            -(int)((tmval->tm_isdst > 0 && daylight) ? altzone : timezone) / 60;
 # elif defined(PEGASUS_OS_LINUX) || defined(PEGASUS_OS_VMS)
         tzMinutesEast = (int) tmval->tm_gmtoff/60;
 # else
Index: src/Pegasus/Common/CIMName.h
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Common/CIMName.h,v
retrieving revision 1.39
diff -u -w -r1.39 CIMName.h
--- src/Pegasus/Common/CIMName.h	13 Sep 2007 08:20:41 -0000	1.39
+++ src/Pegasus/Common/CIMName.h	15 Dec 2008 00:03:23 -0000
@@ -38,7 +38,6 @@
 #include <Pegasus/Common/Linkage.h>
 #include <Pegasus/Common/String.h>
 #include <Pegasus/Common/Array.h>
-#include <Pegasus/Common/Exception.h>
 
 PEGASUS_NAMESPACE_BEGIN
 
Index: src/Pegasus/Common/CIMPropertyList.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Common/CIMPropertyList.cpp,v
retrieving revision 1.16
diff -u -w -r1.16 CIMPropertyList.cpp
--- src/Pegasus/Common/CIMPropertyList.cpp	10 Nov 2006 18:14:57 -0000	1.16
+++ src/Pegasus/Common/CIMPropertyList.cpp	15 Dec 2008 00:03:24 -0000
@@ -32,6 +32,7 @@
 //%/////////////////////////////////////////////////////////////////////////////
 
 #include "CIMPropertyList.h"
+#include <Pegasus/Common/Exception.h>
 
 PEGASUS_NAMESPACE_BEGIN
 
Index: src/Pegasus/Common/CIMQualifierDeclRep.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Common/CIMQualifierDeclRep.cpp,v
retrieving revision 1.45
diff -u -w -r1.45 CIMQualifierDeclRep.cpp
--- src/Pegasus/Common/CIMQualifierDeclRep.cpp	10 Nov 2006 18:14:57 -0000	1.45
+++ src/Pegasus/Common/CIMQualifierDeclRep.cpp	15 Dec 2008 00:03:24 -0000
@@ -32,6 +32,7 @@
 //%/////////////////////////////////////////////////////////////////////////////
 
 #include <cstdio>
+#include "CIMInstance.h"
 #include "CIMQualifierDecl.h"
 #include "CIMQualifierDeclRep.h"
 #include "Indentor.h"
Index: src/Pegasus/Common/CIMQualifierRep.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Common/CIMQualifierRep.cpp,v
retrieving revision 1.44
diff -u -w -r1.44 CIMQualifierRep.cpp
--- src/Pegasus/Common/CIMQualifierRep.cpp	11 Apr 2007 04:17:47 -0000	1.44
+++ src/Pegasus/Common/CIMQualifierRep.cpp	15 Dec 2008 00:03:24 -0000
@@ -31,6 +31,7 @@
 //
 //%/////////////////////////////////////////////////////////////////////////////
 
+#include "CIMInstance.h"
 #include "CIMQualifier.h"
 #include "CIMQualifierRep.h"
 #include "Indentor.h"
Index: src/Pegasus/Common/Constants.h
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Common/Constants.h,v
retrieving revision 1.118
diff -u -w -r1.118 Constants.h
--- src/Pegasus/Common/Constants.h	25 Sep 2007 17:57:42 -0000	1.118
+++ src/Pegasus/Common/Constants.h	15 Dec 2008 00:03:24 -0000
@@ -194,6 +194,7 @@
 #ifdef PEGASUS_OVERRIDE_DEFAULT_RELEASE_DIRS
 # include <Pegasus/Common/ProductDirectoryStructure.h>
 #else
+# define PEGASUS_SERVER_PROCESS_NAME "cimserver"
 # if defined(PEGASUS_OS_HPUX)
 #  define PEGASUS_CIMSERVER_START_FILE      "/etc/opt/wbem/cimserver_start.conf"
 #  define PEGASUS_CIMSERVER_START_LOCK_FILE "/var/opt/wbem/cimserver_start.lock"
@@ -345,6 +346,7 @@
 # define PEGASUS_LOCAL_DOMAIN_SOCKET_PATH  "/tmp/cimxml.socket"
 # define PEGASUS_PAM_STANDALONE_PROC_NAME  "bin/cimservera"
 # define PEGASUS_PROVIDER_AGENT_PROC_NAME  "bin/cimprovagt"
+# define PEGASUS_SERVER_PROCESS_NAME       "cimserver"
 # undef PEGASUS_DEFAULT_MESSAGE_SOURCE      /* Not defined */
 #endif
 
Index: src/Pegasus/Common/Logger.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Common/Logger.cpp,v
retrieving revision 1.56
diff -u -w -r1.56 Logger.cpp
--- src/Pegasus/Common/Logger.cpp	12 Sep 2007 21:30:58 -0000	1.56
+++ src/Pegasus/Common/Logger.cpp	15 Dec 2008 00:03:26 -0000
@@ -68,7 +68,7 @@
 };
 
 LoggerRep* Logger::_rep = 0;
-String Logger::_homeDirectory = ".";
+String Logger::_homeDirectory = "";
 
 const Uint32 Logger::_NUM_LOGLEVEL = 5;
 
@@ -83,15 +83,9 @@
 const Boolean Logger::_SUCCESS = 1;
 const Boolean Logger::_FAILURE = 0;
 
-    static const char* fileNames[] =
-    {
-        "PegasusTrace.log",
-        "PegasusStandard.log",
-        "PegasusAudit.log",
-        "PegasusError.log",
-        "PegasusDebug.log"
-    };
-static const char* lockFileName =  "PegasusLog.lock";
+static const char* logfileName = "scxcimd.log";
+
+static const char* lockFileName =  "scxcimdlog.lock";
 
 
 /* _constructFileName prepares the absolute file name from homeDirectory
@@ -121,10 +115,14 @@
 {
 public:
 
-    LoggerRep(const String& homeDirectory)
+    LoggerRep(const String& homeDirectory) : _homeDirectorySet(false)
     {
 #if !defined(PEGASUS_USE_SYSLOGS)
-        // Add test for home directory set.
+        // Test for home directory set.
+        if ("" == homeDirectory)
+        {
+            return;
+        }
 
         // If home directory does not exist, create it.
         CString lgDir = homeDirectory.getCString();
@@ -157,22 +155,17 @@
 #endif
 
 
-        _logFileNames[Logger::TRACE_LOG] = _constructFileName(homeDirectory,
-                                               fileNames[Logger::TRACE_LOG]);
+        _logFileNames[Logger::TRACE_LOG] = _constructFileName(homeDirectory, logfileName);
 
-        _logFileNames[Logger::STANDARD_LOG] = _constructFileName(homeDirectory,
-                                               fileNames[Logger::STANDARD_LOG]);
+        _logFileNames[Logger::STANDARD_LOG] = _constructFileName(homeDirectory, logfileName);
 
 #ifdef PEGASUS_ENABLE_AUDIT_LOGGER
-        _logFileNames[Logger::AUDIT_LOG] = _constructFileName(homeDirectory,
-                                               fileNames[Logger::AUDIT_LOG]);
+        _logFileNames[Logger::AUDIT_LOG] = _constructFileName(homeDirectory, logfileName);
 #endif
 
-        _logFileNames[Logger::ERROR_LOG] = _constructFileName(homeDirectory,
-                                               fileNames[Logger::ERROR_LOG]);
+        _logFileNames[Logger::ERROR_LOG] = _constructFileName(homeDirectory, logfileName);
 
-        _logFileNames[Logger::DEBUG_LOG] = _constructFileName(homeDirectory,
-                                               fileNames[Logger::DEBUG_LOG]);
+        _logFileNames[Logger::DEBUG_LOG] = _constructFileName(homeDirectory, logfileName);
 #else
 
 #ifdef PEGASUS_OS_ZOS
@@ -182,7 +175,7 @@
 #endif
 
 #endif
-
+        _homeDirectorySet = true;
     }
 
     ~LoggerRep()
@@ -222,6 +215,15 @@
         if (logLevel & Logger::SEVERE) tmp =      "SEVERE  ";
         if (logLevel & Logger::FATAL) tmp =       "FATAL   ";
 
+        // WI 3043
+        if (logLevel & Logger::INFORMATION || logLevel & Logger::WARNING ||
+            logLevel & Logger::SEVERE || logLevel & Logger::FATAL)
+        {
+           System::syslog(systemId, logLevel, localizedMsg.getCString());
+        }
+
+        if (_homeDirectorySet)
+        {
 # ifndef PEGASUS_OS_VMS
         // Acquire AutoMutex (for thread sync) 
         // and AutoFileLock (for Process Sync).
@@ -276,11 +278,19 @@
         logFileStream << System::getCurrentASCIITime()
            << " " << tmp << (const char *)messageString.getCString() << endl;
         logFileStream.close();
+        } // Home directory set.
+        else
+        { // Home directory not set.
+            // Just log to stderr.
+            cerr << System::getCurrentASCIITime()
+                 << " " << tmp << (const char *)messageString.getCString() << endl;
+        }
 #endif // ifndef PEGASUS_USE_SYSLOGS
     }
 
 private:
 
+    Boolean _homeDirectorySet;
 #ifdef PEGASUS_OS_ZOS
     char* logIdentity;
 #endif
@@ -701,6 +711,15 @@
 void Logger::setHomeDirectory(const String& homeDirectory)
 {
     _homeDirectory = homeDirectory;
+
+    // SCX: WI 6435. If home directory is changed after the first
+    // item has already been logged then the new directory will never
+    // be used. With this fix it will be reinitialized.
+    if (_rep)
+    {
+        delete _rep;
+        _rep = 0;
+    }
 }
 
 void Logger::setlogLevelMask( const String logLevelList )
Index: src/Pegasus/Common/Makefile
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Common/Makefile,v
retrieving revision 1.162
diff -u -w -r1.162 Makefile
--- src/Pegasus/Common/Makefile	7 Aug 2007 14:55:35 -0000	1.162
+++ src/Pegasus/Common/Makefile	15 Dec 2008 00:03:26 -0000
@@ -212,9 +212,13 @@
     ifdef OPENSSL_HOME
       EXTRA_LIBRARIES += -L$(OPENSSL_HOME)/lib
     endif
+    ifeq ($(PEGASUS_PLATFORM), SOLARIS_SPARC_CC)
+	EXTRA_LIBRARIES += `pkg-config --libs openssl`
+    else
     EXTRA_LIBRARIES += -lssl -lcrypto
   endif
 endif
+endif
 
 ifeq ($(PEGASUS_PLATFORM),ZOS_ZSERIES_IBM)
   ifdef PEGASUS_ZOS_SECURITY
Index: src/Pegasus/Common/Network.h
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Common/Network.h,v
retrieving revision 1.15
diff -u -w -r1.15 Network.h
--- src/Pegasus/Common/Network.h	13 Aug 2007 11:23:18 -0000	1.15
+++ src/Pegasus/Common/Network.h	15 Dec 2008 00:03:27 -0000
@@ -211,8 +211,7 @@
 //
 //------------------------------------------------------------------------------
 
-#if defined(PEGASUS_PLATFORM_SOLARIS_SPARC_GNU) || \
-    defined(PEGASUS_PLATFORM_TRU64_ALPHA_DECCXX) || \
+#if defined(PEGASUS_PLATFORM_TRU64_ALPHA_DECCXX) || \
     defined(PEGASUS_PLATFORM_WIN64_IA64_MSVC) || \
     defined(PEGASUS_PLATFORM_WIN64_X86_64_MSVC) || \
     defined(PEGASUS_PLATFORM_WIN32_IX86_MSVC)
Index: src/Pegasus/Common/Platform_HPUX_PARISC_ACC.h
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Common/Platform_HPUX_PARISC_ACC.h,v
retrieving revision 1.32
diff -u -w -r1.32 Platform_HPUX_PARISC_ACC.h
--- src/Pegasus/Common/Platform_HPUX_PARISC_ACC.h	6 Jul 2007 18:17:07 -0000	1.32
+++ src/Pegasus/Common/Platform_HPUX_PARISC_ACC.h	15 Dec 2008 00:03:27 -0000
@@ -44,19 +44,21 @@
 
 #define PEGASUS_COMPILER_ACC
 
+
+
 #define PEGASUS_UINT64 unsigned long long
 
 #define PEGASUS_SINT64 long long
 
-#define PEGASUS_ARCHITECTURE_PARISC
+#ifdef HPUX_IA64_NATIVE_COMPILER
+   #define PEGASUS_HAVE_NAMESPACES
+#endif
 
 #define PEGASUS_HAVE_TEMPLATE_SPECIALIZATION
 
 #define PEGASUS_MAXHOSTNAMELEN  256
 
-#ifdef PEGASUS_INTERNALONLY
-typedef int streamsize;
-#endif
+#define PEGASUS_DISABLE_INTERNAL_INLINES
 
 #define PEGASUS_HAVE_PTHREADS
 
@@ -64,4 +66,6 @@
 
 #define PEGASUS_HAS_SIGNALS
 
+#define PEGASUS_ARCHITECTURE_PARISC
+
 #endif /* Pegasus_Platform_HPUX_PARISC_ACC_h */
Index: src/Pegasus/Common/Platform_SOLARIS_SPARC_GNU.h
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Common/Platform_SOLARIS_SPARC_GNU.h,v
retrieving revision 1.17
diff -u -w -r1.17 Platform_SOLARIS_SPARC_GNU.h
--- src/Pegasus/Common/Platform_SOLARIS_SPARC_GNU.h	4 Jun 2007 02:30:04 -0000	1.17
+++ src/Pegasus/Common/Platform_SOLARIS_SPARC_GNU.h	15 Dec 2008 00:03:27 -0000
@@ -56,6 +56,10 @@
 
 // #define PEGASUS_HAVE_TEMPLATE_SPECIALIZATION
 
+#define PEGASUS_DISABLE_INTERNAL_INLINES
+
 #define PEGASUS_HAVE_PTHREADS
 
+#define PEGASUS_HAS_SIGNALS
+
 #endif /* Pegasus_Platform_SOLARIS_SPARC_GNU_h */
Index: src/Pegasus/Common/SpinLock.h
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Common/SpinLock.h,v
retrieving revision 1.8
diff -u -w -r1.8 SpinLock.h
--- src/Pegasus/Common/SpinLock.h	11 Jan 2007 16:21:54 -0000	1.8
+++ src/Pegasus/Common/SpinLock.h	15 Dec 2008 00:03:28 -0000
@@ -154,7 +154,7 @@
 //
 //==============================================================================
 
-#if defined(PEGASUS_PLATFORM_SOLARIS_SPARC_GNU)
+#if defined(PEGASUS_PLATFORM_SOLARIS_SPARC_GNU) && defined(__sparc)
 # define PEGASUS_SPIN_LOCK_DEFINED
 
 # include <new>
Index: src/Pegasus/Common/SystemPOSIX.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Common/SystemPOSIX.cpp,v
retrieving revision 1.36
diff -u -w -r1.36 SystemPOSIX.cpp
--- src/Pegasus/Common/SystemPOSIX.cpp	14 Sep 2007 18:38:57 -0000	1.36
+++ src/Pegasus/Common/SystemPOSIX.cpp	15 Dec 2008 00:03:29 -0000
@@ -52,6 +52,7 @@
 #include <errno.h>
 
 #if defined(PEGASUS_OS_SOLARIS)
+# include <sys/sockio.h>
 # include <string.h>
 #endif
 
@@ -63,6 +64,7 @@
 
 #include "Network.h"
 
+#define PEGASUS_USE_SYSLOGS    // WI 3043
 #if defined(PEGASUS_USE_SYSLOGS)
 # include <syslog.h>
 #endif
@@ -880,6 +882,38 @@
     return true;
 }
 
+static void CreateDir(
+    const char* basedir,
+    const char* userName,
+    const PEGASUS_UID_T& uid,
+    const PEGASUS_GID_T& gid)
+{
+	String path(basedir);
+
+	// Try to create a new subdir from the user name
+	path.append(userName);
+	if (mkdir(path.getCString(), 0700) == 0)
+	{
+		// Try to change ownership of the new subdir
+		if (chown(path.getCString(), uid, gid) == 0)
+		{
+			Logger::put(Logger::STANDARD_LOG, System::CIMSERVER, Logger::INFORMATION, String("Created dir: ") + path);
+		}
+		else
+		{
+			Logger::put(Logger::STANDARD_LOG, System::CIMSERVER, Logger::SEVERE, String("Failed to change owner for dir: ") + path);
+		}
+	}
+	else
+	{
+		// If creation of dir failed, only log if the failure was not that it already existed
+		if (errno != EEXIST)
+		{
+			Logger::put(Logger::STANDARD_LOG, System::CIMSERVER, Logger::SEVERE, String("Failed to create dir: ") + path);
+		}
+	}
+}
+
 Boolean System::changeUserContext_SingleThreaded(
     const char* userName,
     const PEGASUS_UID_T& uid,
@@ -889,6 +923,14 @@
         "Changing user context to: username = %s, uid = %d, gid = %d",
         userName, (int)uid, (int)gid));
 
+	// If spawning a process as not root, create subdir for scx log & persist with new uid as owner, 
+	// if not already existing, so that we have somewhere that this subprocess have permission to write to
+	if (uid != 0)
+	{
+		CreateDir("/var/opt/microsoft/scx/lib/state/", userName, uid, gid);
+		CreateDir("/var/opt/microsoft/scx/log/", userName, uid, gid);
+	}
+
     if (setgid(gid) != 0)
     {
         PEG_TRACE_STRING(TRC_OS_ABSTRACTION, Tracer::LEVEL2,
@@ -963,7 +1005,7 @@
 void System::syslog(const String& ident, Uint32 severity, const char* message)
 {
 #if defined(PEGASUS_USE_SYSLOGS) && \
-    (defined(PEGASUS_OS_HPUX) || defined(PEGASUS_OS_LINUX))
+    (defined(PEGASUS_OS_HPUX) || defined(PEGASUS_OS_LINUX) || defined(PEGASUS_OS_SOLARIS))
 
     // Since the openlog(), syslog(), and closelog() function calls must be
     // coordinated (see below), we need a thread control.
@@ -982,26 +1024,26 @@
 
     // Map from the Logger log level to the system log level.
 
-    Uint32 syslogLevel;
+    Uint32 syslogLevel = LOG_DAEMON;
     if (severity & Logger::FATAL)
     {
-        syslogLevel = LOG_CRIT;
+        syslogLevel |= LOG_CRIT;
     }
     else if (severity & Logger::SEVERE)
     {
-        syslogLevel = LOG_ERR;
+        syslogLevel |= LOG_ERR;
     }
     else if (severity & Logger::WARNING)
     {
-        syslogLevel = LOG_WARNING;
+        syslogLevel |= LOG_WARNING;
     }
     else if (severity & Logger::INFORMATION)
     {
-        syslogLevel = LOG_INFO;
+        syslogLevel |= LOG_INFO;
     }
     else // if (severity & Logger::TRACE)
     {
-        syslogLevel = LOG_DEBUG;
+        syslogLevel |= LOG_DEBUG;
     }
 
     // Write the message to the system log.
Index: src/Pegasus/Common/Threads.h
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Common/Threads.h,v
retrieving revision 1.14
diff -u -w -r1.14 Threads.h
--- src/Pegasus/Common/Threads.h	3 Aug 2007 01:07:54 -0000	1.14
+++ src/Pegasus/Common/Threads.h	15 Dec 2008 00:03:29 -0000
@@ -52,7 +52,10 @@
 #else
 # error "<Pegasus/Common/Threads.h>: not implemented"
 #endif
-
+#if defined(PEGASUS_PLATFORM_SOLARIS_SPARC_CC)
+# include <string.h>
+# include <stdio.h>
+#endif
 PEGASUS_NAMESPACE_BEGIN
 
 //==============================================================================
@@ -217,6 +220,8 @@
 #if defined(PEGASUS_PLATFORM_AIX_RS_IBMCXX) || \
     defined(PEGASUS_PLATFORM_PASE_ISERIES_IBMCXX) || \
     defined(PEGASUS_PLATFORM_HPUX_ACC) || \
+    defined(PEGASUS_PLATFORM_SOLARIS_SPARC_GNU) || \
+    defined(PEGASUS_PLATFORM_SOLARIS_SPARC_CC) || \
     defined(PEGASUS_PLATFORM_TRU64_ALPHA_DECCXX) || \
     defined(PEGASUS_OS_VMS) || \
     defined(PEGASUS_OS_ZOS) || \
Index: src/Pegasus/Common/XmlWriter.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Common/XmlWriter.cpp,v
retrieving revision 1.152
diff -u -w -r1.152 XmlWriter.cpp
--- src/Pegasus/Common/XmlWriter.cpp	3 Sep 2007 11:27:02 -0000	1.152
+++ src/Pegasus/Common/XmlWriter.cpp	15 Dec 2008 00:03:30 -0000
@@ -2094,6 +2094,8 @@
     const String& content)
 {
     out << STRLIT("HTTP/1.1 " HTTP_STATUS_UNAUTHORIZED "\r\n");
+	Uint32 contentLength = 0;
+	OUTPUT_CONTENTLENGTH;
     out << content << STRLIT("\r\n");
     out << STRLIT("\r\n");
 
Index: src/Pegasus/Common/tests/CIMName/TestCIMName.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Common/tests/CIMName/TestCIMName.cpp,v
retrieving revision 1.1
diff -u -w -r1.1 TestCIMName.cpp
--- src/Pegasus/Common/tests/CIMName/TestCIMName.cpp	13 Sep 2007 12:07:51 -0000	1.1
+++ src/Pegasus/Common/tests/CIMName/TestCIMName.cpp	15 Dec 2008 00:03:30 -0000
@@ -36,6 +36,7 @@
 #include <Pegasus/Common/CIMName.h>
 
 #include <Pegasus/Common/PegasusAssert.h>
+#include <Pegasus/Common/Exception.h>
 
 PEGASUS_USING_PEGASUS;
 PEGASUS_USING_STD;
Index: src/Pegasus/Compiler/cmdline/cimmof/cmdline.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Compiler/cmdline/cimmof/cmdline.cpp,v
retrieving revision 1.57
diff -u -w -r1.57 cmdline.cpp
--- src/Pegasus/Compiler/cmdline/cimmof/cmdline.cpp	13 Sep 2007 02:31:21 -0000	1.57
+++ src/Pegasus/Compiler/cmdline/cimmof/cmdline.cpp	15 Dec 2008 00:03:35 -0000
@@ -88,16 +88,21 @@
 
 #define DEFAULT_SERVER_AND_PORT "localhost:5988"
 
+static String g_ourCmdName;
+static String g_cmdNameCimmofl = "cimmofl";
+static String g_cmdNameCimmof  = "cimmof";
+
 ostream & cimmofl_warning(ostream &os)
 {
 
   String warn =
-      "Warning: Use of cimmofl can corrupt the CIM Server Repository.\n";
-  warn.append (
-      "         cimmofl should only be used under very controlled"
-            " situations.\n");
-  warn.append (
-      "         cimmof is the recommended OpenPegasus MOF compiler.\n\n");
+      "Warning: Use of " + g_cmdNameCimmofl + " can corrupt the CIM Server Repository.\n";
+
+  warn.append ("         " + g_cmdNameCimmofl
+               + " should only be used under very controlled situations.\n");
+
+  warn.append ("         " + g_cmdNameCimmof
+               + " is the recommended OpenPegasus MOF compiler.\n\n");
 
   MessageLoaderParms parms(
       "Compiler.cmdline.cimmof.cmdline.CIMMOFL_USAGE_WARNING",warn);
@@ -114,26 +119,13 @@
     //PEP167 change
     String help;
 #ifdef PEGASUS_OS_HPUX
-    if(progtype == 1)
-    {
-        help.append("Usage: ").append("cimmofl");
-    }
-    else
-    {
-        help.append("Usage: ").append("cimmof ");
-    }
+    help.append("Usage: ").append(g_ourCmdName);
     help.append( " -h | --help\n" );
 
-    if(progtype == 1)
-        help.append("       cimmofl");
-    else
-        help.append("       cimmof ");
+    help.append("       " + g_ourCmdName);
     help.append(" --version\n");
 
-    if(progtype == 1)
-        help.append("       cimmofl");
-    else
-        help.append("       cimmof ");
+    help.append("       " + g_ourCmdName);
     help.append( " [ -w ] [ -uc ] [ -aE | -aV | -aEV ] [ -I path ]\n");
     help.append( "              [ -n namespace | --namespace namespace ]");
     if(progtype == 1)
@@ -169,22 +161,13 @@
                                         " defaults to \"XML\"\n");
     }
 #else
-    if(progtype == 1)
-        help.append("Usage: ").append("cimmofl");
-    else
-        help.append("Usage: ").append("cimmof ");
+    help.append("Usage: ").append(g_ourCmdName);
     help.append( " -h | --help\n");
 
-    if(progtype == 1)
-        help.append("       cimmofl");
-    else
-        help.append("       cimmof ");
+    help.append("       " + g_ourCmdName);
     help.append(" --version\n");
 
-    if(progtype == 1)
-        help.append("       cimmofl");
-    else
-        help.append("       cimmof ");
+    help.append("       " + g_ourCmdName);
     help.append( " [ -w ] [-E ] [ -uc ] [ -aE | -aV | -aEV ] [ -I path ]\n");
     help.append( "               [ -n namespace | --namespace namespace ]"
                                 " [ --xml ]\n");
@@ -245,20 +228,20 @@
     {
         help.append(
         "    -W                  - Suppress the usage warning (i.e., Warning:\n"
-        "                          Use of cimmofl can corrupt the CIM Server\n"
-        "                          Repository. cimmofl should only be used\n"
-        "                          under very controlled situations. cimmof\n"
+        "                          Use of " + g_cmdNameCimmofl + " can corrupt the CIM Server\n"
+        "                          Repository. " + g_cmdNameCimmofl + " should only be used\n"
+        "                          under very controlled situations. " + g_cmdNameCimmof + "\n"
         "                          is the recommended OpenPegasus MOF\n"
         "                          compiler.)\n");
 }
 
     if(progtype == 1)
     {
-        help.append("\n\nWarning: Use of cimmofl can corrupt the CIM Server"
+        help.append("\n\nWarning: Use of " + g_cmdNameCimmofl + " can corrupt the CIM Server"
                     " Repository.\n");
-        help.append("         cimmofl should only be used under very"
+        help.append("         " + g_cmdNameCimmofl + " should only be used under very"
                     " controlled situations.\n");
-        help.append("         cimmof is the recommended OpenPegasus MOF"
+        help.append("         " + g_cmdNameCimmof + " is the recommended OpenPegasus MOF"
                     " compiler.\n");
     }
 
@@ -456,6 +439,22 @@
         pos = name;
     else
         pos++;
+
+    // Saved how we were invoked (this part will hopefully be accepted by OpenPegasus folks)
+    g_ourCmdName = pos;
+
+    // If "scx" is prefixing the command, skip that
+    if (0 == strncasecmp("scx", pos, 3))
+    {
+        // We found a prefix of "scx", so just skip that
+        pos += 3;
+
+        // and fix up the image names
+        g_cmdNameCimmofl = "scx" + g_cmdNameCimmofl;
+        g_cmdNameCimmof  = "scx" + g_cmdNameCimmof;
+    }
+
+    // Now see if we're "cimmof" or "cimmofl"
     if (*pos != 'c' && *pos != 'C') return -1;
     pos++;
     if (*pos != 'i' && *pos != 'I') return -1;
Index: src/Pegasus/Config/DefaultPropertyTable.h
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Config/DefaultPropertyTable.h,v
retrieving revision 1.38
diff -u -w -r1.38 DefaultPropertyTable.h
--- src/Pegasus/Config/DefaultPropertyTable.h	12 Sep 2007 21:30:58 -0000	1.38
+++ src/Pegasus/Config/DefaultPropertyTable.h	15 Dec 2008 00:03:35 -0000
@@ -36,6 +36,10 @@
 
     {"socketWriteTimeout", PEGASUS_DEFAULT_SOCKETWRITE_TIMEOUT_SECONDS_STRING,
      IS_STATIC, 0, 0, IS_VISIBLE},
+    {"httpPort", "2701", IS_STATIC, 0, 0, IS_VISIBLE},
+    {"forceProviderProcesses", "true", IS_STATIC, 0, 0, IS_VISIBLE},
+    {"enableHttpConnection", "false", IS_STATIC, 0, 0, IS_VISIBLE},
+    {"enableHttpsConnection", "false", IS_STATIC, 0, 0, IS_VISIBLE},
 #if defined(PEGASUS_PLATFORM_LINUX_GENERIC_GNU)
 # include "DefaultPropertyTableLinux.h"
 #elif PEGASUS_PLATFORM_HPUX_ACC
@@ -47,21 +51,18 @@
 #elif defined(PEGASUS_OS_ZOS)
 # include "DefaultPropertyTablezOS.h"
 #else
-    {"httpPort", "", IS_STATIC, 0, 0, IS_VISIBLE},
     {"httpsPort", "", IS_STATIC, 0, 0, IS_VISIBLE},
-    {"enableHttpConnection", "true", IS_STATIC, 0, 0, IS_VISIBLE},
-    {"enableHttpsConnection", "false", IS_STATIC, 0, 0, IS_VISIBLE},
     {"home", "./", IS_STATIC, 0, 0, IS_VISIBLE},
+#if defined(PEGASUS_PLATFORM_AIX_RS_IBMCXX) || defined(PEGASUS_PLATFORM_DARWIN_IX86_GNU)
+    // AIX and Mac OS (when using launchd) service start/stop don't like daemons that fork
+    {"daemon", "false", IS_STATIC, 0, 0, IS_VISIBLE},
+#else
     {"daemon", "true", IS_STATIC, 0, 0, IS_VISIBLE},
+#endif
     {"slp", "false", IS_STATIC, 0, 0, IS_VISIBLE},
     {"enableAssociationTraversal", "true", IS_STATIC, 0, 0, IS_VISIBLE},
     {"enableIndicationService", "true", IS_STATIC, 0, 0, IS_VISIBLE},
     {"sslClientVerificationMode", "disabled", IS_STATIC, 0, 0, IS_VISIBLE},
-# ifdef PEGASUS_DEFAULT_ENABLE_OOP
-    {"forceProviderProcesses", "true", IS_STATIC, 0, 0, IS_VISIBLE},
-# else
-    {"forceProviderProcesses", "false", IS_STATIC, 0, 0, IS_VISIBLE},
-# endif
 # ifdef PEGASUS_ENABLE_AUDIT_LOGGER
     {"enableAuditLog", "false", IS_DYNAMIC, 0, 0, IS_VISIBLE},
 # endif
Index: src/Pegasus/Config/DefaultPropertyTableHpux.h
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Config/DefaultPropertyTableHpux.h,v
retrieving revision 1.30
diff -u -w -r1.30 DefaultPropertyTableHpux.h
--- src/Pegasus/Config/DefaultPropertyTableHpux.h	12 Sep 2007 21:30:58 -0000	1.30
+++ src/Pegasus/Config/DefaultPropertyTableHpux.h	15 Dec 2008 00:03:35 -0000
@@ -35,30 +35,19 @@
 #define Pegasus_DefaultPropertyTableHpux_h
 
 #ifdef PEGASUS_USE_RELEASE_CONFIG_OPTIONS
-    {"httpPort", "", IS_STATIC, 0, 0, IS_VISIBLE},
     {"httpsPort", "", IS_STATIC, 0, 0, IS_VISIBLE},
-    {"enableHttpConnection", "false", IS_STATIC, 0, 0, IS_VISIBLE},
-    {"enableHttpsConnection", "true", IS_STATIC, 0, 0, IS_VISIBLE},
     {"home", "./", IS_STATIC, 0, 0, IS_VISIBLE},
     {"daemon", "true", IS_STATIC, 0, 0, IS_VISIBLE},
     {"slp", "false", IS_STATIC, 0, 0, IS_VISIBLE},
     {"enableAssociationTraversal", "true", IS_STATIC, 0, 0, IS_VISIBLE},
     {"enableIndicationService", "true", IS_STATIC, 0, 0, IS_VISIBLE},
     {"sslClientVerificationMode", "disabled", IS_STATIC, 0, 0, IS_VISIBLE},
-# ifdef PEGASUS_DEFAULT_ENABLE_OOP
-    {"forceProviderProcesses", "true", IS_STATIC, 0, 0, IS_VISIBLE},
-# else
-    {"forceProviderProcesses", "false", IS_STATIC, 0, 0, IS_VISIBLE},
-# endif
 # ifdef PEGASUS_ENABLE_AUDIT_LOGGER
     {"enableAuditLog", "false", IS_DYNAMIC, 0, 0, IS_VISIBLE},
 # endif
     {"maxProviderProcesses", "0", IS_STATIC, 0, 0, IS_VISIBLE}
 #else
-    {"httpPort", "", IS_STATIC, 0, 0, IS_VISIBLE},
     {"httpsPort", "", IS_STATIC, 0, 0, IS_VISIBLE},
-    {"enableHttpConnection", "true", IS_STATIC, 0, 0, IS_VISIBLE},
-    {"enableHttpsConnection", "false", IS_STATIC, 0, 0, IS_VISIBLE},
     {"home", "./", IS_STATIC, 0, 0, IS_VISIBLE},
     {"daemon", "true", IS_STATIC, 0, 0, IS_VISIBLE},
     {"slp", "false", IS_STATIC, 0, 0, IS_VISIBLE},
@@ -66,11 +55,6 @@
     {"enableIndicationService", "true", IS_STATIC, 0, 0, IS_VISIBLE},
     {"maximumEnumerationBreadth", "50", IS_STATIC, 0, 0, IS_VISIBLE},
     {"sslClientVerificationMode", "disabled", IS_STATIC, 0, 0, IS_VISIBLE},
-# ifdef PEGASUS_DEFAULT_ENABLE_OOP
-    {"forceProviderProcesses", "true", IS_STATIC, 0, 0, IS_VISIBLE},
-# else
-    {"forceProviderProcesses", "false", IS_STATIC, 0, 0, IS_VISIBLE},
-# endif
 # ifdef PEGASUS_ENABLE_AUDIT_LOGGER
     {"enableAuditLog", "false", IS_DYNAMIC, 0, 0, IS_VISIBLE},
 # endif
Index: src/Pegasus/Config/DefaultPropertyTableLinux.h
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Config/DefaultPropertyTableLinux.h,v
retrieving revision 1.26
diff -u -w -r1.26 DefaultPropertyTableLinux.h
--- src/Pegasus/Config/DefaultPropertyTableLinux.h	12 Sep 2007 21:30:58 -0000	1.26
+++ src/Pegasus/Config/DefaultPropertyTableLinux.h	15 Dec 2008 00:03:35 -0000
@@ -36,46 +36,31 @@
 
 
 #ifdef PEGASUS_USE_RELEASE_CONFIG_OPTIONS
-    {"logLevel", "SEVERE", IS_STATIC, 0, 0, IS_VISIBLE},
-    {"httpPort", "", IS_STATIC, 0, 0, IS_VISIBLE},
     {"httpsPort", "", IS_STATIC, 0, 0, IS_VISIBLE},
-    {"enableHttpConnection", "false", IS_STATIC, 0, 0, IS_VISIBLE},
-    {"enableHttpsConnection", "true", IS_STATIC, 0, 0, IS_VISIBLE},
     {"home", "", IS_STATIC, 0, 0, IS_VISIBLE},
     {"daemon", "true", IS_STATIC, 0, 0, IS_HIDDEN},
     {"install", "false", IS_STATIC, 0, 0, IS_VISIBLE},
     {"remove", "false", IS_STATIC, 0, 0, IS_VISIBLE},
     {"slp", "false", IS_STATIC, 0, 0, IS_VISIBLE},
     {"enableAssociationTraversal", "true", IS_STATIC, 0, 0, IS_VISIBLE},
-    {"enableAuthentication", "true", IS_STATIC, 0, 0, IS_VISIBLE},
     {"enableNamespaceAuthorization", "false", IS_STATIC, 0, 0, IS_VISIBLE},
     {"enableIndicationService", "true", IS_STATIC, 0, 0, IS_VISIBLE},
     {"enableSubscriptionsForNonprivilegedUsers",
          "false", IS_STATIC, 0, 0, IS_VISIBLE},
     {"enableRemotePrivilegedUserAccess", "true", IS_STATIC, 0, 0, IS_VISIBLE},
     {"sslClientVerificationMode", "disabled", IS_STATIC, 0, 0, IS_VISIBLE},
-# ifdef PEGASUS_DEFAULT_ENABLE_OOP
-    {"forceProviderProcesses", "true", IS_STATIC, 0, 0, IS_VISIBLE},
-# else
-    {"forceProviderProcesses", "false", IS_STATIC, 0, 0, IS_VISIBLE},
-# endif
 # ifdef PEGASUS_ENABLE_AUDIT_LOGGER
     {"enableAuditLog", "false", IS_DYNAMIC, 0, 0, IS_VISIBLE},
 # endif
     {"maxProviderProcesses", "0", IS_STATIC, 0, 0, IS_VISIBLE}
 #else
-    {"logLevel", "INFORMATION", IS_STATIC, 0, 0, IS_VISIBLE},
-    {"httpPort", "", IS_STATIC, 0, 0, IS_VISIBLE},
     {"httpsPort", "", IS_STATIC, 0, 0, IS_VISIBLE},
-    {"enableHttpConnection", "true", IS_STATIC, 0, 0, IS_VISIBLE},
-    {"enableHttpsConnection", "true", IS_STATIC, 0, 0, IS_VISIBLE},
     {"home", "./", IS_STATIC, 0, 0, IS_VISIBLE},
     {"daemon", "true", IS_STATIC, 0, 0, IS_VISIBLE},
     {"install", "false", IS_STATIC, 0, 0, IS_VISIBLE},
     {"remove", "false", IS_STATIC, 0, 0, IS_VISIBLE},
     {"slp", "false", IS_STATIC, 0, 0, IS_VISIBLE},
     {"enableAssociationTraversal", "true", IS_STATIC, 0, 0, IS_VISIBLE},
-    {"enableAuthentication", "false", IS_STATIC, 0, 0, IS_VISIBLE},
     {"enableNamespaceAuthorization", "false", IS_STATIC, 0, 0, IS_VISIBLE},
     {"enableIndicationService", "true", IS_STATIC, 0, 0, IS_VISIBLE},
     {"enableSubscriptionsForNonprivilegedUsers",
@@ -83,11 +68,6 @@
     {"enableRemotePrivilegedUserAccess", "true", IS_STATIC, 0, 0, IS_VISIBLE},
     {"maximumEnumerationBreadth", "50", IS_STATIC, 0, 0, IS_VISIBLE},
     {"sslClientVerificationMode", "disabled", IS_STATIC, 0, 0, IS_VISIBLE},
-# ifdef PEGASUS_DEFAULT_ENABLE_OOP
-    {"forceProviderProcesses", "true", IS_STATIC, 0, 0, IS_VISIBLE},
-# else
-    {"forceProviderProcesses", "false", IS_STATIC, 0, 0, IS_VISIBLE},
-# endif
 # ifdef PEGASUS_ENABLE_AUDIT_LOGGER
     {"enableAuditLog", "false", IS_DYNAMIC, 0, 0, IS_VISIBLE},
 # endif
Index: src/Pegasus/Config/FixedPropertyTable.h
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Config/FixedPropertyTable.h,v
retrieving revision 1.16
diff -u -w -r1.16 FixedPropertyTable.h
--- src/Pegasus/Config/FixedPropertyTable.h	3 Aug 2007 00:45:01 -0000	1.16
+++ src/Pegasus/Config/FixedPropertyTable.h	15 Dec 2008 00:03:35 -0000
@@ -48,6 +48,10 @@
 #include "FixedPropertyTableVms.h"
 #elif defined(PEGASUS_PLATFORM_ZOS_ZSERIES_IBM)
 #include "FixedPropertyTablezOS.h"
+#elif defined(PEGASUS_PLATFORM_SOLARIS_SPARC_CC)
+#include "FixedPropertyTableSolaris.h"
+#elif defined(PEGASUS_PLATFORM_DARWIN_IX86_GNU)
+#include "FixedPropertyTableLinux.h"
 #else
     {"bogus", "MyBogusValue"} // Remove this line if others are added
 #endif
Index: src/Pegasus/Config/FixedPropertyTableAix.h
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Config/FixedPropertyTableAix.h,v
retrieving revision 1.7
diff -u -w -r1.7 FixedPropertyTableAix.h
--- src/Pegasus/Config/FixedPropertyTableAix.h	14 Nov 2006 18:34:49 -0000	1.7
+++ src/Pegasus/Config/FixedPropertyTableAix.h	15 Dec 2008 00:03:35 -0000
@@ -31,38 +31,55 @@
 //
 //%/////////////////////////////////////////////////////////////////////////////
 
-#ifdef PEGASUS_USE_RELEASE_CONFIG_OPTIONS
+#if defined(PEGASUS_USE_RELEASE_DIRS) && \
+    defined(PEGASUS_OVERRIDE_DEFAULT_RELEASE_DIRS)
+# include <Pegasus/Config/ProductDirectoryStructure.h>
+#endif
 
-    {"logLevel",            "INFORMATION"},
+#ifdef PEGASUS_USE_RELEASE_CONFIG_OPTIONS
     {"httpPort",            "5988"},
     {"httpsPort",           "5989"},
     {"home",                ""},
-    {"daemon",              "true"},
     {"install",             "false"},
     {"remove",              "false"},
     {"slp",                 "false"},
-    {"enableAuthentication", "true"},
-    {"enableAssociationTraversal", "true"},
-    {"enableIndicationService", "true"},
-    {"enableClientCertification", "false"},
     {"httpAuthType",        "Basic"},
-    {"repositoryIsDefaultInstanceProvider", "false"},
+    {"enableBinaryRepository", "false"},
+#endif
+#if defined(PEGASUS_USE_RELEASE_DIRS)
+# if defined(PEGASUS_OVERRIDE_DEFAULT_RELEASE_DIRS)
+    {"traceFilePath",       PEGASUS_TRACE_FILE_PATH},
+#  if !defined(PEGASUS_USE_SYSLOGS)
+    {"logdir",              PEGASUS_LOG_DIR},
+#  endif
+    {"passwordFilePath",     PEGASUS_CONFIG_DIR"/cimserver.passwd"},
+    {"sslCertificateFilePath", PEGASUS_SSL_CERT_FILE_PATH},
+    {"sslKeyFilePath",       PEGASUS_SSL_KEY_FILE_PATH},
+    {"sslTrustStore",        PEGASUS_SSL_SERVER_TRUSTSTORE},
+#  ifdef PEGASUS_ENABLE_SSL_CRL_VERIFICATION
+    {"crlStore",             PEGASUS_SSL_SERVER_CRL},
 #endif
-
-#ifdef PEGASUS_USE_RELEASE_DIRS
-//    {"traceFilePath",    "/opt/freeware/cimom/pegasus/logs/cimserver.trc"},
-//    {"logdir",           "/opt/freeware/cimom/pegasus/logs"},
-//    {"sslCertificateFilePath", "/opt/freeware/cimom/pegasus/etc/cert.pem"},
-//    {"sslKeyFilePath",   "/opt/freeware/cimom/pegasus/etc/file.pem"},
-//    {"sslTrustFilePath", "/opt/freeware/cimom/pegasus/etc/client.pem"},
-//    {"passwordFilePath", "/opt/freeware/cimom/pegasus/etc/cimserver.passwd"},
-    {"messageDir",          "/opt/freeware/cimom/pegasus/msg"},
     {"repositoryDir",       PEGASUS_REPOSITORY_DIR},
-    {"providerDir",         "/usr/lib:/usr/pegasus/provider/lib"},
+    {"providerDir",          PEGASUS_PROVIDER_LIB_DIR},
+# else /* PEGASUS_OVERRIDE_DEFAULT_RELEASE_DIRS */
+    {"traceFilePath",       "/var/opt/tog-pegasus/cache/trace/cimserver.trc"},
+#  if !defined(PEGASUS_USE_SYSLOGS)
+    {"logdir",              "/var/opt/tog-pegasus/log"},
 #endif
-
+    {"passwordFilePath",    "/etc/opt/tog-pegasus/cimserver.passwd"},
+    {"sslCertificateFilePath", "/etc/opt/tog-pegasus/server.pem"},
+    {"sslKeyFilePath",      "/etc/opt/tog-pegasus/file.pem"},
+    {"sslTrustStore",       "/etc/opt/tog-pegasus/cimserver_trust"},
+    {"crlStore",            "/etc/opt/tog-pegasus/crl"},
+    {"repositoryDir",       PEGASUS_REPOSITORY_DIR},
+#  if defined(PEGASUS_ENABLE_CMPI_PROVIDER_MANAGER)
+#  else
+    {"providerDir",         "/opt/tog-pegasus/providers/lib"},
+#  endif
+    {"messageDir",          "/opt/tog-pegasus/share/locale/ICU_Messages"},
+# endif /* PEGASUS_OVERRIDE_DEFAULT_RELEASE_DIRS */
+#endif /* defined(PEGASUS_USE_RELEASE_DIRS) */
 #if !defined(PEGASUS_USE_RELEASE_CONFIG_OPTIONS) && \
     !defined(PEGASUS_USE_RELEASE_DIRS)
-    {"bogus", "MyBogusValue"}      // Remove this line if others are added
-
+    {"bogus", "MyBogusValue"} /* Remove this line if others are added */
 #endif
Index: src/Pegasus/Config/FixedPropertyTableHpux.h
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Config/FixedPropertyTableHpux.h,v
retrieving revision 1.36
diff -u -w -r1.36 FixedPropertyTableHpux.h
--- src/Pegasus/Config/FixedPropertyTableHpux.h	25 May 2007 18:35:17 -0000	1.36
+++ src/Pegasus/Config/FixedPropertyTableHpux.h	15 Dec 2008 00:03:35 -0000
@@ -36,14 +36,17 @@
 #ifndef Pegasus_FixedPropertyTableHpux_h
 #define Pegasus_FixedPropertyTableHpux_h
 
+#if defined(PEGASUS_USE_RELEASE_DIRS) && \
+    defined(PEGASUS_OVERRIDE_DEFAULT_RELEASE_DIRS)
+# include <Pegasus/Config/ProductDirectoryStructure.h>
+#endif
+
 #ifdef PEGASUS_USE_RELEASE_CONFIG_OPTIONS
-    {"logLevel",            "INFORMATION"},
     {"httpPort",            "5988"},
     {"httpsPort",           "5989"},
     {"home",                ""},
     {"daemon",              "true"},
     {"slp",                 "false"},
-    {"enableAuthentication", "true"},
     {"enableAssociationTraversal", "true"},
     {"enableIndicationService", "true"},
     {"httpAuthType",        "Basic"},
@@ -53,6 +56,22 @@
 #endif
 
 #ifdef PEGASUS_USE_RELEASE_DIRS
+# if defined(PEGASUS_OVERRIDE_DEFAULT_RELEASE_DIRS)
+    {"traceFilePath",       PEGASUS_TRACE_FILE_PATH},
+#  if !defined(PEGASUS_USE_SYSLOGS)
+    {"logdir",              PEGASUS_LOG_DIR},
+#  endif
+    {"passwordFilePath",     PEGASUS_CONFIG_DIR"/cimserver.passwd"},
+    {"sslCertificateFilePath", PEGASUS_SSL_CERT_FILE_PATH},
+    {"sslKeyFilePath",       PEGASUS_SSL_KEY_FILE_PATH},
+    {"sslTrustStore",        PEGASUS_SSL_SERVER_TRUSTSTORE},
+#  ifdef PEGASUS_ENABLE_SSL_CRL_VERIFICATION
+    {"crlStore",             PEGASUS_SSL_SERVER_CRL},
+#  endif
+    {"repositoryDir",        PEGASUS_REPOSITORY_DIR},
+    {"providerDir",          PEGASUS_PROVIDER_LIB_DIR},
+
+# else /* PEGASUS_OVERRIDE_DEFAULT_RELEASE_DIRS */
     {"traceFilePath",       "/var/opt/wbem/trace/cimserver.trc"},
 #ifndef PEGASUS_USE_SYSLOGS
     {"logdir",              "/var/opt/wbem/logs"},
@@ -66,8 +85,8 @@
     {"repositoryDir",       PEGASUS_REPOSITORY_DIR},
     {"providerDir",         "/opt/wbem/providers/lib"},
     {"messageDir",         "/opt/wbem/share/locale/ICU_Messages"},
-#endif
-
+# endif /* PEGASUS_OVERRIDE_DEFAULT_RELEASE_DIRS */
+#endif /* defined(PEGASUS_USE_RELEASE_DIRS) */
 #if !defined(PEGASUS_USE_RELEASE_CONFIG_OPTIONS) && \
     !defined(PEGASUS_USE_RELEASE_DIRS)
     {"bogus", "MyBogusValue"}      // Remove this line if others are added
Index: src/Pegasus/Config/FixedPropertyTableLinux.h
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Config/FixedPropertyTableLinux.h,v
retrieving revision 1.37
diff -u -w -r1.37 FixedPropertyTableLinux.h
--- src/Pegasus/Config/FixedPropertyTableLinux.h	25 May 2007 18:35:17 -0000	1.37
+++ src/Pegasus/Config/FixedPropertyTableLinux.h	15 Dec 2008 00:03:35 -0000
@@ -45,7 +45,6 @@
     {"install",             "false"},
     {"remove",              "false"},
     {"slp",                 "false"},
-    {"enableAuthentication", "true"},
     {"httpAuthType",        "Basic"},
     {"enableBinaryRepository", "false"},
 #endif
@@ -63,7 +62,11 @@
     {"crlStore",             PEGASUS_SSL_SERVER_CRL},
 #  endif
     {"repositoryDir",        PEGASUS_REPOSITORY_DIR},
+/*
+    SCX: Removed since we dont want any providers under /usr/
     {"providerDir", PEGASUS_PROVIDER_LIB_DIR ":/usr/" PEGASUS_ARCH_LIB "/cmpi"},
+*/
+    {"providerDir", PEGASUS_PROVIDER_LIB_DIR },
 # else /* PEGASUS_OVERRIDE_DEFAULT_RELEASE_DIRS */
     {"traceFilePath",       "/var/opt/tog-pegasus/cache/trace/cimserver.trc"},
 #  if !defined(PEGASUS_USE_SYSLOGS)
Index: src/Pegasus/Config/LogPropertyOwner.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Config/LogPropertyOwner.cpp,v
retrieving revision 1.28
diff -u -w -r1.28 LogPropertyOwner.cpp
--- src/Pegasus/Config/LogPropertyOwner.cpp	10 Aug 2007 18:55:25 -0000	1.28
+++ src/Pegasus/Config/LogPropertyOwner.cpp	15 Dec 2008 00:03:35 -0000
@@ -52,11 +52,11 @@
 
 static struct ConfigPropertyRow properties[] =
 {
+    {"logLevel", "INFORMATION", IS_DYNAMIC, 0, 0, IS_VISIBLE},
 #if defined(PEGASUS_OS_ZOS) && defined(PEGASUS_USE_RELEASE_DIRS)
 # if !defined(PEGASUS_USE_SYSLOGS)
     {"logdir", "/var/wbem/logs", IS_DYNAMIC, 0, 0, IS_HIDDEN},
 # endif    
-    {"logLevel", "INFORMATION", IS_DYNAMIC, 0, 0, IS_VISIBLE} 
 #elif defined(PEGASUS_OS_PASE)
 # if defined(PEGASUS_USE_RELEASE_CONFIG_OPTIONS)
         {"logdir", "/QOpenSys/QIBM/UserData/UME/Pegasus/logs", IS_DYNAMIC, 
@@ -64,18 +64,15 @@
 # else 
         {"logdir", "./logs", IS_DYNAMIC, 0, 0, IS_VISIBLE},
 # endif
-    {"logLevel", "INFORMATION", IS_DYNAMIC, 0, 0, IS_VISIBLE}
 #else
 # if defined(PEGASUS_USE_RELEASE_CONFIG_OPTIONS)
 #  if !defined(PEGASUS_USE_SYSLOGS)
     {"logdir", "./logs", IS_DYNAMIC, 0, 0, IS_HIDDEN},
 #  endif
-    {"logLevel", "SEVERE", IS_DYNAMIC, 0, 0, IS_HIDDEN}
 # else
 #  if !defined(PEGASUS_USE_SYSLOGS)
     {"logdir", "./logs", IS_DYNAMIC, 0, 0, IS_VISIBLE},
 #  endif
-    {"logLevel", "INFORMATION", IS_DYNAMIC, 0, 0, IS_VISIBLE}
 # endif
 #endif
 };
Index: src/Pegasus/Config/SecurityPropertyOwner.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Config/SecurityPropertyOwner.cpp,v
retrieving revision 1.61
diff -u -w -r1.61 SecurityPropertyOwner.cpp
--- src/Pegasus/Config/SecurityPropertyOwner.cpp	3 Aug 2007 00:50:51 -0000	1.61
+++ src/Pegasus/Config/SecurityPropertyOwner.cpp	15 Dec 2008 00:03:35 -0000
@@ -72,8 +72,8 @@
 //   enableSubscriptionsForNonprivilegedUsers
 //   authorizedUserGroups
 ///////////////////////////////////////////////////////////////////////////////
-#ifdef PEGASUS_OS_PASE
     {"enableAuthentication", "true", IS_STATIC, 0, 0, IS_VISIBLE},
+#ifdef PEGASUS_OS_PASE
     {"httpAuthType", "Basic", IS_STATIC, 0, 0, IS_VISIBLE},
     {"passwordFilePath", "cimserver.passwd", IS_STATIC, 0, 0, IS_VISIBLE},
     {"sslCertificateFilePath", "ssl/keystore/servercert.pem", IS_STATIC, 
@@ -95,7 +95,6 @@
     {"enableRemotePrivilegedUserAccess", "true", IS_STATIC, 0, 0, IS_VISIBLE},
     {"authorizedUserGroups", "", IS_STATIC, 0, 0, IS_VISIBLE},
 #else // PEGASUS_OS_PASE
-    {"enableAuthentication", "false", IS_STATIC, 0, 0, IS_VISIBLE},
     {"httpAuthType", "Basic", IS_STATIC, 0, 0, IS_VISIBLE},
     {"passwordFilePath", "cimserver.passwd", IS_STATIC, 0, 0, IS_VISIBLE},
 #ifdef PEGASUS_OS_HPUX
Index: src/Pegasus/ManagedClient/CIMManagedClient.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/ManagedClient/CIMManagedClient.cpp,v
retrieving revision 1.10
diff -u -w -r1.10 CIMManagedClient.cpp
--- src/Pegasus/ManagedClient/CIMManagedClient.cpp	26 Jun 2007 20:26:17 -0000	1.10
+++ src/Pegasus/ManagedClient/CIMManagedClient.cpp	15 Dec 2008 00:03:41 -0000
@@ -769,11 +769,11 @@
 		// lets determine if there is a connection for this object path available
 		targetCIMOM = _cccm->getConnection(_host, _port, _nameSpace);
 	}
-	// damn, somehow we missed to construct a CIMClientRep for this connection
+	// Somehow we missed to construct a CIMClientRep for this connection
 	// shouldn't be possible at all, but one never knows everything
 	if (targetCIMOM == 0)
 	{
-		// throw some crazy exception
+		// Throw some exception, though it might not be the best exception.
 		// TODO: invent exception
 		MessageLoaderParms typeMismatchMessage = MessageLoaderParms("Client.CIMClientRep.TYPEMISMATCH_PORTMISMATCH",
 										 "No valid CIMOM connection configured for: ($0:$1) ",
Index: src/Pegasus/ProviderManager2/CMPI/CMPILocalProviderManager.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/ProviderManager2/CMPI/CMPILocalProviderManager.cpp,v
retrieving revision 1.50
diff -u -w -r1.50 CMPILocalProviderManager.cpp
--- src/Pegasus/ProviderManager2/CMPI/CMPILocalProviderManager.cpp	7 Sep 2007 18:34:11 -0000	1.50
+++ src/Pegasus/ProviderManager2/CMPI/CMPILocalProviderManager.cpp	15 Dec 2008 00:03:42 -0000
@@ -918,6 +918,12 @@
                 Tracer::LEVEL2,
                 "Exception caught Loading/Linking Provider Module " +
                 moduleFileName+ " error is: "+exceptionMsg);
+            
+            Logger::put_l(Logger::ERROR_LOG, System::CIMSERVER, Logger::SEVERE,
+                "ProviderManager.CMPI.CMPIProviderModule.WRONG_LIBRARY", 
+                "Provider is not a CMPI style provider. library $0, error $1",
+                moduleFileName, exceptionMsg);
+                                
             deleteProvider =true;
         }
         catch (...)
Index: src/Pegasus/ProviderManager2/CMPI/CMPI_BrokerEnc.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/ProviderManager2/CMPI/CMPI_BrokerEnc.cpp,v
retrieving revision 1.56
diff -u -w -r1.56 CMPI_BrokerEnc.cpp
--- src/Pegasus/ProviderManager2/CMPI/CMPI_BrokerEnc.cpp	10 Sep 2007 08:42:42 -0000	1.56
+++ src/Pegasus/ProviderManager2/CMPI/CMPI_BrokerEnc.cpp	15 Dec 2008 00:03:43 -0000
@@ -55,9 +55,9 @@
 #include <Pegasus/Provider/CIMOMHandle.h>
 #include <Pegasus/WQL/WQLSelectStatement.h>
 #include <Pegasus/WQL/WQLParser.h>
+#include <Pegasus/Provider/CIMOMHandleQueryContext.h>
 
 #ifndef PEGASUS_DISABLE_CQL
-#include <Pegasus/Provider/CIMOMHandleQueryContext.h>
 #include <Pegasus/CQL/CQLSelectStatement.h>
 #include <Pegasus/CQL/CQLParser.h>
 #include <Pegasus/CQL/CQLChainedIdentifier.h>
@@ -1323,7 +1323,34 @@
 
         if (strncmp (lang, CALL_SIGN_WQL, CALL_SIGN_WQL_SIZE) == 0)
         {
-            WQLSelectStatement *stmt = new WQLSelectStatement ();
+			// Incorporating Pegasus bug fix for WQL queries.
+			// For details, please refer to Bug #6957.
+			// http://cvs.rdg.opengroup.org/bugzilla/show_bug.cgi?id=6957
+
+            // Get the namespace.
+            const CMPIContext *ctx = CMPI_ThreadContext::getContext ();
+
+            CMPIData data = ctx->ft->getEntry (ctx, CMPIInitNameSpace, &rc);
+            if (rc.rc != CMPI_RC_OK)
+            {
+                CMSetStatus (st, CMPI_RC_ERR_FAILED);
+                PEG_METHOD_EXIT();
+                return NULL;
+            }
+
+            // Create the CIMOMHandle wrapper.
+            CIMOMHandle *cm_handle = CM_CIMOM (mb);
+            CIMOMHandleQueryContext qcontext(
+               CIMNamespaceName(CMGetCharPtr(data.value.string)),
+                *cm_handle);
+
+            String sLang (lang);
+            String sQuery (query);
+
+            WQLSelectStatement *stmt = new WQLSelectStatement (sLang,
+                                                               sQuery,
+                                                               qcontext);
+
             try
             {
                 WQLParser::parse(query, *stmt);
Index: src/Pegasus/ProviderManager2/CMPI/CMPI_Instance.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/ProviderManager2/CMPI/CMPI_Instance.cpp,v
retrieving revision 1.41
diff -u -w -r1.41 CMPI_Instance.cpp
--- src/Pegasus/ProviderManager2/CMPI/CMPI_Instance.cpp	18 Sep 2007 19:20:03 -0000	1.41
+++ src/Pegasus/ProviderManager2/CMPI/CMPI_Instance.cpp	15 Dec 2008 00:03:43 -0000
@@ -46,6 +46,7 @@
 #include <string.h>
 #include <new>
 #include <Pegasus/Common/Tracer.h>
+#include <Pegasus/Common/Logger.h>
 
 PEGASUS_USING_STD;
 PEGASUS_NAMESPACE_BEGIN
@@ -323,6 +324,10 @@
         }
         else
         {
+            Logger::put(Logger::STANDARD_LOG, System::CIMSERVER, Logger::WARNING,
+                        "Setting undefined property name: $0  Type: $1  on class: $2",
+                        name, cimTypeToString(v.getType()), inst->getClassName().getString());
+
             if (type==CMPI_ref)
             {
                 CIMObjectPath *ref=(CIMObjectPath*)(data->ref->hdl);
Index: src/Pegasus/ProviderManager2/CMPI/CMPI_Wql2Dnf.h
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/ProviderManager2/CMPI/CMPI_Wql2Dnf.h,v
retrieving revision 1.15
diff -u -w -r1.15 CMPI_Wql2Dnf.h
--- src/Pegasus/ProviderManager2/CMPI/CMPI_Wql2Dnf.h	10 Sep 2007 11:47:06 -0000	1.15
+++ src/Pegasus/ProviderManager2/CMPI/CMPI_Wql2Dnf.h	15 Dec 2008 00:03:44 -0000
@@ -126,8 +126,8 @@
 
 typedef Array<TableauRow_WQL> Tableau_WQL;
 
-
-class CMPI_Wql2Dnf
+// Added PEGASUS_WQL_LINKAGE to expose the symbol so scxwql support could use the it
+class PEGASUS_WQL_LINKAGE CMPI_Wql2Dnf
 {
 public:
     CMPI_Wql2Dnf();
Index: src/Pegasus/ProviderManagerService/ProviderAgent/ProviderAgent.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/ProviderManagerService/ProviderAgent/ProviderAgent.cpp,v
retrieving revision 1.8
diff -u -w -r1.8 ProviderAgent.cpp
--- src/Pegasus/ProviderManagerService/ProviderAgent/ProviderAgent.cpp	13 Sep 2007 02:33:05 -0000	1.8
+++ src/Pegasus/ProviderManagerService/ProviderAgent/ProviderAgent.cpp	15 Dec 2008 00:03:49 -0000
@@ -120,6 +120,11 @@
     PEG_METHOD_ENTER(TRC_PROVIDERAGENT, "ProviderAgent::~ProviderAgent");
 
     _providerAgent = 0;
+#if defined(PEGASUS_PLATFORM_AIX_RS_IBMCXX) && defined(PEGASUS_OS_AIX5)
+    // workaround for "coredump-on-exit" problem. This is strictly AIX 5.3 specific.
+    // see WI 7241 for more details
+    _exit(0);
+#endif
 
     PEG_METHOD_EXIT();
 }
Index: src/Pegasus/ProviderManagerService/ProviderAgent/cimprovagt.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/ProviderManagerService/ProviderAgent/cimprovagt.cpp,v
retrieving revision 1.2
diff -u -w -r1.2 cimprovagt.cpp
--- src/Pegasus/ProviderManagerService/ProviderAgent/cimprovagt.cpp	3 Aug 2007 02:03:03 -0000	1.2
+++ src/Pegasus/ProviderManagerService/ProviderAgent/cimprovagt.cpp	15 Dec 2008 00:03:49 -0000
@@ -54,9 +54,12 @@
 #include <as400_protos.h>
 #endif
 
+static std::string COMMAND_NAME = "cimprovagt";
+
+
 void usage()
 {
-    cerr << "Usage: cimprovagt <input_pipe> <output_pipe> <id>" << endl;
+    cerr << "Usage: " << COMMAND_NAME.c_str() << " <input_pipe> <output_pipe> <id>" << endl;
 }
 
 //
@@ -70,12 +73,47 @@
     return(ThreadReturnType(0));
 }
 
+///////////////////////////////////////////////////////////////////////////////
+/**
+    Fix up, and store, the command name that we were invoked with.
+
+    @param   Name  Name of the command that we were invoked with
+*/
+///////////////////////////////////////////////////////////////////////////////
+
+#if defined(PEGASUS_OS_TYPE_WINDOWS)
+# define SEPCHAR '\\'
+# define SEPCHAR2 '/'
+#else
+# define SEPCHAR '/'
+# define SEPCHAR2 '/'
+#endif
+
+void fixCommandName(const char *name)
+{
+    const char *pos, *pos2;
+
+    pos = strrchr(name, SEPCHAR);
+    pos2 = strrchr(name, SEPCHAR2);
+    pos = (pos2 > pos) ? pos2 : pos;
+    if (!pos)
+        pos = name;
+    else
+        pos++;
+
+    COMMAND_NAME = pos;
+
+    return;
+}
+
 /////////////////////////////////////////////////////////////////////////
 // MAIN
 //////////////////////////////////////////////////////////////////////////
 
 int main(int argc, char* argv[])
 {
+    fixCommandName(argv[0]);
+
     //
     // Get the arguments from the command line
     // arg1 is the input pipe handle
Index: src/Pegasus/Security/Authentication/PAMBasicAuthenticator.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Security/Authentication/PAMBasicAuthenticator.cpp,v
retrieving revision 1.14
diff -u -w -r1.14 PAMBasicAuthenticator.cpp
--- src/Pegasus/Security/Authentication/PAMBasicAuthenticator.cpp	3 Aug 2007 02:04:10 -0000	1.14
+++ src/Pegasus/Security/Authentication/PAMBasicAuthenticator.cpp	15 Dec 2008 00:03:51 -0000
@@ -44,6 +44,10 @@
 #  include "PAMBasicAuthenticatorUnix.cpp"
 # elif defined(PEGASUS_OS_PASE)
 #  include "PAMBasicAuthenticatorUnix.cpp"
+# elif defined(PEGASUS_OS_SOLARIS)
+#  include "PAMBasicAuthenticatorUnix.cpp"
+# elif defined(PEGASUS_OS_DARWIN)
+#  include "PAMBasicAuthenticatorUnix.cpp"
 # else
 #  include "PAMBasicAuthenticatorStub.cpp"
 # endif
Index: src/Pegasus/Server/QuerySupportRouter.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Server/QuerySupportRouter.cpp,v
retrieving revision 1.5
diff -u -w -r1.5 QuerySupportRouter.cpp
--- src/Pegasus/Server/QuerySupportRouter.cpp	14 Nov 2006 18:34:59 -0000	1.5
+++ src/Pegasus/Server/QuerySupportRouter.cpp	15 Dec 2008 00:03:53 -0000
@@ -44,7 +44,11 @@
     CIMOperationRequestDispatcher* opThis,
     CIMExecQueryRequestMessage* msg)
 {
-    if (msg->queryLanguage=="WQL")
+    if (msg->queryLanguage=="DMTF:CQL")
+        // Ugly fix to make it possible to refer to DMTF:CQL in OpsMgr MP:s
+        // Replace this code when CQL is properly implemented (SCX WI 2218)
+        ((WQLOperationRequestDispatcher*)opThis)->handleQueryRequest(msg);
+    else if (msg->queryLanguage=="WQL") 
         ((WQLOperationRequestDispatcher*)opThis)->handleQueryRequest(msg);
     else return false;
 
Index: src/Pegasus/Server/WQLOperationRequestDispatcher.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/Server/WQLOperationRequestDispatcher.cpp,v
retrieving revision 1.27
diff -u -w -r1.27 WQLOperationRequestDispatcher.cpp
--- src/Pegasus/Server/WQLOperationRequestDispatcher.cpp	14 Aug 2007 19:30:34 -0000	1.27
+++ src/Pegasus/Server/WQLOperationRequestDispatcher.cpp	15 Dec 2008 00:03:53 -0000
@@ -205,7 +205,8 @@
     CIMException cimException;
     CIMName className;
 
-    if (request->queryLanguage!="WQL")
+    // Ugly fix to make it possible to refer to DMTF:CQL in OpsMgr MP:s (SCX WI 2218)
+    if ((request->queryLanguage!="WQL") && (request->queryLanguage!="DMTF:CQL"))
     {
         cimException = PEGASUS_CIM_EXCEPTION(
             CIM_ERR_QUERY_LANGUAGE_NOT_SUPPORTED, request->queryLanguage);
Index: src/Pegasus/msg/Server/pegasusServer_en.txt
===================================================================
RCS file: /cvs/MSB/pegasus/src/Pegasus/msg/Server/pegasusServer_en.txt,v
retrieving revision 1.199
diff -u -w -r1.199 pegasusServer_en.txt
--- src/Pegasus/msg/Server/pegasusServer_en.txt	19 Sep 2007 20:51:18 -0000	1.199
+++ src/Pegasus/msg/Server/pegasusServer_en.txt	15 Dec 2008 00:03:55 -0000
@@ -3475,7 +3475,7 @@
         *    and ends with a newline character (\n).
         */
         src.Server.cimserver.MENU.STANDARD:string {
-        " Usage: cimserver [ [ options ] | [ configProperty=value, ... ] ]\n"
+        " Usage: scxcimserver [ [ options ] | [ configProperty=value, ... ] ]\n"
         "  options\n"
         "    -v, --version   - Display CIM server version number.\n"
         "    -h, --help      - Print this help message.\n"
@@ -3494,7 +3494,7 @@
         *    and ends with a newline character (\n).
         */
         src.Server.cimserver.MENU.HPUXLINUXIA64GNU:string {
-        " Usage: cimserver [ [ options ] | [ configProperty=value, ... ] ]\n"
+        " Usage: scxcimserver [ [ options ] | [ configProperty=value, ... ] ]\n"
         "  options\n"
         "    -v, --version   - Display CIM server version number.\n"
         "    -h, --help      - Print this help message.\n"
@@ -3512,7 +3512,7 @@
         *    and ends with a newline character (\n).
         */
         src.Server.cimserver.MENU.WINDOWS:string {
-        " Usage: cimserver [ [ options ] | [ configProperty=value, ... ] ]\n"
+        " Usage: scxcimserver [ [ options ] | [ configProperty=value, ... ] ]\n"
         "  options\n"
         "    -v, --version   - Display CIM server version number.\n"
         "    -h, --help      - Print this help message.\n"
Index: src/Providers/ManagedSystem/OperatingSystem/tests/OSTestClient/OSTestClient_Solaris.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Providers/ManagedSystem/OperatingSystem/tests/OSTestClient/OSTestClient_Solaris.cpp,v
retrieving revision 1.3
diff -u -w -r1.3 OSTestClient_Solaris.cpp
--- src/Providers/ManagedSystem/OperatingSystem/tests/OSTestClient/OSTestClient_Solaris.cpp	27 Jun 2007 19:27:52 -0000	1.3
+++ src/Providers/ManagedSystem/OperatingSystem/tests/OSTestClient/OSTestClient_Solaris.cpp	15 Dec 2008 00:03:58 -0000
@@ -572,7 +572,7 @@
 
    // arbitrary choice of valid delta - typically ran within
    // 2048, but with many client connections, went as high as
-   // 36,000+.  Thus chose 2^16 = 65536 (still helps weed out
+   // 36,000+.  Thus chose 2^16 = 65536 (still helps remove
    // garbage values).
    return (delta < 65536);
 }
Index: src/Server/cimserver.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Server/cimserver.cpp,v
retrieving revision 1.211
diff -u -w -r1.211 cimserver.cpp
--- src/Server/cimserver.cpp	10 Sep 2007 08:17:07 -0000	1.211
+++ src/Server/cimserver.cpp	15 Dec 2008 00:04:06 -0000
@@ -115,7 +115,7 @@
 #ifdef PEGASUS_ENABLE_PRIVILEGE_SEPARATION
 # define PEGASUS_PROCESS_NAME "cimservermain"
 #else
-# define PEGASUS_PROCESS_NAME "cimserver"
+# define PEGASUS_PROCESS_NAME PEGASUS_SERVER_PROCESS_NAME
 #endif
 
 #include <Pegasus/Common/Executor.h>
@@ -208,7 +208,7 @@
 //
 //  The command name.
 //
-static const char COMMAND_NAME []    = "cimserver";
+static const char COMMAND_NAME []    = PEGASUS_SERVER_PROCESS_NAME;
 
 //
 //  The constant defining usage string.
@@ -1119,8 +1119,12 @@
 #endif
         }
 
+
 #if defined(PEGASUS_DEBUG)
-        cout << "Started. " << endl;
+        // SCX: cout is not allowed to be used if parent already exited
+        // due to race condition, parent may or may not be alived at this point
+        // issue found on rhel4
+        //cout << "Started. " << endl;
 #endif
 
         // Put server started message to the logger
Index: src/Service/ServerProcessUnix.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Service/ServerProcessUnix.cpp,v
retrieving revision 1.17
diff -u -w -r1.17 ServerProcessUnix.cpp
--- src/Service/ServerProcessUnix.cpp	19 Jun 2007 17:58:04 -0000	1.17
+++ src/Service/ServerProcessUnix.cpp	15 Dec 2008 00:04:07 -0000
@@ -80,7 +80,7 @@
     errno = 0;
     do
     {
-#if defined(PEGASUS_OS_ZOS) || defined(PEGASUS_OS_SOLARIS)
+#if defined(PEGASUS_OS_ZOS)
         sig = sigwait(&set);
 #else // else for platforms = LINUX, HPUX, AIX
         sigwait(&set, &sig);
Index: src/Service/ServerRunStatus.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Service/ServerRunStatus.cpp,v
retrieving revision 1.6
diff -u -w -r1.6 ServerRunStatus.cpp
--- src/Service/ServerRunStatus.cpp	3 Aug 2007 02:34:08 -0000	1.6
+++ src/Service/ServerRunStatus.cpp	15 Dec 2008 00:04:07 -0000
@@ -53,7 +53,10 @@
 extern "C"
 {
 # include <procinfo.h>
+# if !defined(PEGASUS_OS_AIX6)
+// This already exists, and is slightly different, on AIX6.
 extern int getprocs(struct procsinfo *, int, struct fdsinfo *, int,pid_t *,int);
+# endif /* !PEGASUS_OS_AIX6 */
 # define PROCSIZE sizeof(struct procsinfo)
 }
 #endif
Index: src/Shutdown/cimshutdown.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/Shutdown/cimshutdown.cpp,v
retrieving revision 1.2
diff -u -w -r1.2 cimshutdown.cpp
--- src/Shutdown/cimshutdown.cpp	25 May 2007 18:35:15 -0000	1.2
+++ src/Shutdown/cimshutdown.cpp	15 Dec 2008 00:04:08 -0000
@@ -39,7 +39,7 @@
 #ifdef PEGASUS_ENABLE_PRIVILEGE_SEPARATION
 # define PEGASUS_PROCESS_NAME "cimservermain"
 #else
-# define PEGASUS_PROCESS_NAME "cimserver"
+# define PEGASUS_PROCESS_NAME PEGASUS_SERVER_PROCESS_NAME
 #endif
 
 PEGASUS_USING_PEGASUS;
Index: src/WMIMapper/WMIProvider/WMIValue.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/WMIMapper/WMIProvider/WMIValue.cpp,v
retrieving revision 1.13
diff -u -w -r1.13 WMIValue.cpp
--- src/WMIMapper/WMIProvider/WMIValue.cpp	31 Jul 2007 19:16:58 -0000	1.13
+++ src/WMIMapper/WMIProvider/WMIValue.cpp	15 Dec 2008 00:04:11 -0000
@@ -358,7 +358,7 @@
     switch (vt)
     {
         case VT_I2:
-            // have to screw around here because automation type
+            // have to work around here because automation type
             // is not necessarily the mof type...
             if (CIM_SINT8 == Type)
             {
@@ -376,7 +376,7 @@
             break;
 
         case VT_I4:
-            // have to screw around here because automation type
+            // have to work around here because automation type
             // is not necessarily the mof type...
             if (CIM_UINT16 == Type)
             {
Index: src/slp/slp_client/src/cmd-utils/slp_client/slp_client.cpp
===================================================================
RCS file: /cvs/MSB/pegasus/src/slp/slp_client/src/cmd-utils/slp_client/slp_client.cpp,v
retrieving revision 1.32
diff -u -w -r1.32 slp_client.cpp
--- src/slp/slp_client/src/cmd-utils/slp_client/slp_client.cpp	3 Aug 2007 02:38:25 -0000	1.32
+++ src/slp/slp_client/src/cmd-utils/slp_client/slp_client.cpp	15 Dec 2008 00:04:16 -0000
@@ -6681,7 +6681,7 @@
     "Custer is a h?ll of a d**n*ed fo*\\; -- Phil Sheridan",
     "See Mug, See",
     "management-hardware.[ih][ba][ml]",
-    "The telephone is [hlr]eap [bds]ig medicine -- Crazy Horse",
+    "The telephone is [hlr]eap [bds]ig medicine -- Mentally Ill Horse",
     "Young kids today are [A-z]ool",
     "Young kids today are [A-z]ool"
 };
@@ -6692,7 +6692,7 @@
     "custer is a hill of a dinged fog; -- Phil Sheridan",
     "see mug, see",
     "management-Hardware.HAL",
-    "the telephone is leap dig medicine -- Crazy Horse",
+    "the telephone is leap dig medicine -- Mentally Ill Horse",
     "young kids today are cool",
     "young kids today are fool"
 };
